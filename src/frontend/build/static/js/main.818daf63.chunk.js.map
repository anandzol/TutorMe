{"version":3,"sources":["assets/graduation.png","services/AuthHeader.js","config.js","services/AuthService.js","components/NavigationBar.js","components/routes/AdminRoute.js","components/routes/TutorRoute.js","components/routes/PrivateRoute.js","services/UniversityService.js","services/CourseService.js","components/CreateCourse.js","components/RegisterUser.js","components/HomeScreen.js","components/CreateUniversity.js","services/FacultyService.js","components/CreateFaculty.js","services/TutorService.js","services/SessionService.js","components/CreateTutorialSession.js","components/LoginUser.js","components/TutorialSessionComponent.js","components/ShowTutorialSessions.js","services/BookingService.js","components/BookSession.js","components/PreviousSessionCard.js","components/UpcomingSessionCard.js","components/ListUserSessions.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["parseJwt","token","base64","split","replace","JSON","parse","window","atob","SERVER_API","API_URL","email","password","axios","post","then","response","data","localStorage","setItem","stringify","removeItem","user","callback","errorcallback","catch","error","console","getItem","this","isLoggedIn","currentUserToken","getCurrentUser","role","currentUser","NavigationBar","AuthService","logout","props","history","push","navDropDownTitle","classes","Navbar","bg","variant","href","src","graduationIcon","className","logo","Brand","bar","Row","title","Nav","listButton","calendarButton","profileButton","NavDropdown","id","profileButton__span","Item","Divider","onClick","Component","withStyles","fontSize","position","right","top","zIndex","color","paddingRight","height","width","left","AdminRoute","component","rest","isAdmin","render","to","pathname","state","from","location","TutorRoute","isTutor","isTutorOrAdmin","PrivateRoute","getAllUniversitiesSorted","get","universitiesSorted","sort","a","b","name","localeCompare","forEach","item","coursesSorted","courses","_id","faculties","getUniversityById","universityId","getUniversityFacultiesSorted","facultiesSorted","createUniversity","payload","defaultState","university","faculty","availableUniversities","availableFaculties","errors","CreateCourse","onChange","e","setState","target","value","onCancel","preventDefault","onChangeUniversity","length","onSubmit","validateInput","availableFacultiesSorted","padding_top","padding_card","Card","card","Form","form","Group","Label","Control","as","map","_","Text","controlId","type","rows","button_box","Button","size","active","button","paddingTop","backgroundColor","paddingBottom","minHeight","paddingLeft","firstName","lastName","confirmPassword","gender","semester","program","dateOfBirth","Date","lastOnline","universities","languages","duplicateEmail","postalCode","adress","semesterCount","degree","bachelor","master","graduate","roles","student","tutor","admin","label","male","female","undefined","RegisterUser","onChangeNumber","number","Number","onChangeDatePicker","onRegister","log","register","status","onChangeLanguages","language","universitiesMapped","index","input","isValid","test","optionState","container","title_padding_bottom","row_padding_top","class","htmlFor","placeholder","row__padding_right","Object","keys","values","label__padding_top","Col","datePickerWrapper","wrapperClassName","disableCalendar","clearIcon","format","calendarAriaLabel","required","isClearable","isMulti","options","min","max","button_padding_right","datePicker","borderColor","display","padding","lineHeight","backgroundClip","border","borderRadius","transition","passwordStrengthBar","HomeScreen","button__padding_top","theme","CreateUniversity","createFaculty","res","top_padding","getTutorById","tutorId","getAllVerifiedSessionsByUniversity","course","price","remote","onsite","description","date","duration","availableCourses","labels","CreateTutorialSession","onChangePrice","onChangeDate","onCreate","createSession","onClickCheckmark","checked","facultyId","initialCourses","onChangeFaculty","getFacultyCoursesSorted","currentUserId","initialFaculty","initialFacultyId","form_label","vl","form_selectors","form_option","file_selector","File","date_picker","disableClock","selected","showTimeSelect","dateFormat","numeric_input","description_area","checkmarks_left","Check","fontWeight","borderLeft","marginLeft","LoginUser","handleLogin","bind","onChangeEmail","onChangePassword","onTogglePassword","loading","message","passwordToggle","checkBtn","context","_errors","login","result","resMessage","toString","login_form","ref","c","padding_button_top","passWordToggle","disabled","style","register_button","useStyles","makeStyles","maxHeight","header_wrapper","header","button_wrapper","minWidth","maxWidth","description_wrapper","overflowY","overflowX","fontStyle","image_wrapper","marginRight","image","gridImage","row_wrapper","TutorialSessionComponent","useState","setName","setLastOnline","age","setAge","rating","setRating","setOnsite","setRemote","experience","setExperience","setLanguages","setPostalCode","useHistory","useEffect","differenceInHours","dateDifference","Math","floor","ageDifference","abs","getUTCFullYear","averageRating","Grid","spacing","xs","sessionId","alt","join","Rating","readOnly","precision","treepane","searchField","padding_bottom","tree_item_label","check_box_label","checkbox_wrapper","check_box","card_wrapper","slider","slider_wrapper","ratingFilter","ratingFilter_wrapper","filterCol","sortSessions","sessionCard","breadCrumb","breadCrumbItem","paginationComponent","valuetext","marks","ShowTutorialSessions","allSessions","setAllSessions","displayedSessions","setDisplayedSessions","filteredSessions","setFilteredSessions","filteredCourses","setFilteredCourses","setFaculties","selectedCourses","setSelectedCourses","setLocation","setLanguage","setPriceFilter","startDate","setStartDate","endDate","setEndDate","sortValue","setSortValue","initialRender","setInitialRender","isLoading","setLoading","searchKeyword","setSearchKeyword","activePage","setActivePage","numberOfPages","setNumberOfPages","universityName","setUniversityName","tmp","slice","ceil","filterSessions","filter","session","includes","minimumPrice","maximumPrice","some","lang","allFilteredSessions","toLowerCase","createdAt","getTime","startIndex","endIndex","clonedArray","onClickCheckbox","findIndex","currentCourses","Breadcrumb","searchText","classNames","TreeView","defaultCollapseIcon","defaultExpandIcon","tree_item","TreeItem","nodeId","courseId","FormControlLabel","control","Checkbox","Typography","gutterBottom","Slider","valueLabelDisplay","newValue","getAriaValueText","defaultValue","placeholderText","dates","start","end","selectsRange","sortedSessions","Pagination","count","page","userId","tutorName","courseName","inquiry","tutorAvailability","studentId","BookSession","onChangeInquiry","goBack","match","params","currentUserJWT","getSessionById","column","courseTitle","sessionDetails","icon","row","textInput","spellCheck","inline","vertical","sessionInfo","datepicker","PreviousSessionCard","onRatingsChanged","ratingObject","bookingId","rateBooking","onBookAgain","headerWrapper","cancelButtonWrapper","bookAgainButton","divider","activeColor","withRouter","textAlign","overFlowY","float","bottom","marginTop","marginBottom","heigth","UpcomingSessionCard","cancelButton","remove","upcomingSessionHeader","previousSessionHeader","upcomingSessionRow","previousSessionRow","sessionColumn","sessionColumnWrapper","sessionColumnCard","routes","path","permission","CreateFaculty","setUserId","previousSessions","setPreviousSessions","upcomingSessions","setUpcomingSessions","setBookings","currentUserJwt","getAllBookingsByUserId","currentDate","bookings","App","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.818daf63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/graduation.162e2131.png\";","export const authHeader = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return { 'x-access-token': user.accessToken };\n    } else {\n        return {};\n    }\n};\n\nexport const parseJwt = token => {\n    if (!token) {\n        return;\n    }\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace('-', '+').replace('_', '/');\n    return JSON.parse(window.atob(base64));\n};\n\nexport default {\n    authHeader,\n    parseJwt\n};\n","export const SERVER_API = 'http://localhost:8082/api';\n","import axios from 'axios';\nimport { parseJwt } from './AuthHeader';\nimport { SERVER_API } from '../config';\n\nconst API_URL = `${SERVER_API}/user`;\n\nclass AuthService {\n    login(email, password) {\n        return axios\n            .post(`${API_URL}/login`, {\n                email,\n                password\n            })\n            .then(response => {\n                if (response.data.token) {\n                    localStorage.setItem('user', JSON.stringify(response.data.token));\n                }\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    register(user, callback, errorcallback) {\n        return axios\n            .post(`${API_URL}/register`, user)\n            .then(response => {\n                if (callback != null) {\n                    callback(response);\n                }\n            })\n            .catch(error => {\n                console.error(error);\n                errorcallback(error);\n            });\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    isLoggedIn() {\n        return localStorage.getItem('user') !== null;\n    }\n\n    isAdmin() {\n        if (this.isLoggedIn()) {\n            const currentUserToken = this.getCurrentUser();\n            const currentUser = parseJwt(currentUserToken);\n            return currentUser.role === 'admin';\n        }\n        return false;\n    }\n\n    isTutor() {\n        if (this.isLoggedIn()) {\n            const currentUserToken = this.getCurrentUser();\n            const currentUser = parseJwt(currentUserToken);\n            return currentUser.role === 'tutor' || currentUser.role === 'admin';\n        }\n        return false;\n    }\n}\n\nexport default new AuthService();\n","import React, { Component } from 'react';\nimport graduationIcon from '../assets/graduation.png';\nimport { Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\nimport AuthService from '../services/AuthService';\nimport { withStyles } from '@material-ui/styles';\nimport { BsJustify, BsCalendar, BsPersonFill } from 'react-icons/bs';\n\nconst styles = () => ({\n    bar: {\n        fontSize: 'xxx-large'\n    },\n    listButton: {\n        position: 'absolute',\n        right: '255px',\n        top: '27px',\n        zIndex: 1000,\n        fontSize: '54px',\n        color: 'white'\n    },\n    calendarButton: {\n        position: 'absolute',\n        right: '195px',\n        top: '34px',\n        zIndex: 1000,\n        fontSize: '38px',\n        color: 'white'\n    },\n\n    logo: {\n        paddingRight: '10px',\n        height: '70px',\n        width: '70px'\n    },\n    profileButton: {\n        position: 'absolute',\n        right: '80px',\n        top: '15px',\n        zIndex: 1000,\n        color: 'white',\n        fontSize: 'xxx-large'\n    },\n    title: {\n        position: 'relative',\n        left: '4rem',\n        color: '#56b5ab'\n    }\n});\n\nclass NavigationBar extends Component {\n    constructor() {\n        super();\n    }\n\n    onLogout() {\n        AuthService.logout();\n        this.props.history.push('/home');\n    }\n\n    render() {\n        const navDropDownTitle = <BsPersonFill></BsPersonFill>;\n        const { classes } = this.props;\n        return (\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <a href=\"/home\">\n                    <img src={graduationIcon} className={classes.logo}></img>\n                </a>\n                <Navbar.Brand className={classes.bar} href=\"/home\">\n                    <Row>\n                        <div className=\"col-sm-4\">Tutor</div>\n                        <div className={`${classes.title} col-sm-0`}>Me</div>\n                    </Row>\n                </Navbar.Brand>\n                <Nav>\n                    <div>\n                        <a href=\"/list-user-sessions\">\n                            <BsJustify className={classes.listButton}></BsJustify>\n                        </a>\n                    </div>\n                </Nav>\n                <Nav>\n                    <a href=\"/home\">\n                        <BsCalendar className={classes.calendarButton}></BsCalendar>\n                    </a>\n                </Nav>\n                <Nav className={classes.profileButton}>\n                    <NavDropdown\n                        title={navDropDownTitle}\n                        id=\"collasible-nav-dropdown\"\n                        className={classes.profileButton__span}>\n                        <NavDropdown.Item href=\"/home\">Home</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Edit Profile</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/create-tutorial-session\">\n                            Offer Session\n                        </NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.4\">Manage Course</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"/create-course\">Create Course</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/create-faculty\">Create Faculty</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/create-university\">\n                            Create University\n                        </NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"/login-user\" onClick={AuthService.logout}>\n                            Sign Out\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\nexport default withStyles(styles)(NavigationBar);\n","import React from 'react';\nimport AuthService from '../../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\n// components/routes/AdminRoute.js\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n    const isAdmin = AuthService.isAdmin();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isAdmin ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login-user', state: { from: props.location } }} />\n                )\n            }\n        />\n    );\n};\n\nexport default AdminRoute;\n","import React from 'react';\nimport AuthService from '../../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\n// components/routes/TutorRoute.js\n\nconst TutorRoute = ({ component: Component, ...rest }) => {\n    const isTutor = AuthService.isTutor();\n    const isAdmin = AuthService.isAdmin();\n\n    const isTutorOrAdmin = isTutor || isAdmin;\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isTutorOrAdmin ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login-user', state: { from: props.location } }} />\n                )\n            }\n        />\n    );\n};\n\nexport default TutorRoute;\n","import React from 'react';\nimport AuthService from '../../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\n// components/routes/PrivateRoute.js\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const isLoggedIn = AuthService.isLoggedIn();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login-user', state: { from: props.location } }} />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import axios from 'axios';\n\nimport { SERVER_API } from '../config';\n\nconst API_URL = `${SERVER_API}/university`;\n\n/**\n * API Endpoint for getting all universities\n * @return {Object} Array containing all universities\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getAllUniversities(callback, errorcallback) {\n    axios\n        .get(`${API_URL}`)\n        .then(response => {\n            if (callback != null) {\n                callback(response);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for getting all universities, sorted by name alphabetically\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getAllUniversitiesSorted(callback, errorcallback) {\n    axios\n        .get(`${API_URL}`)\n        .then(response => {\n            const data = response.data;\n\n            let universitiesSorted = [];\n            data.sort((a, b) => a.name.localeCompare(b.name)).forEach(item => {\n                let coursesSorted = [];\n\n                item.courses\n                    .sort((a, b) => a.name.localeCompare(b.name))\n                    .forEach(item => {\n                        coursesSorted.push(item);\n                    });\n\n                universitiesSorted.push({\n                    _id: item._id,\n                    name: item.name,\n                    faculties: item.faculties,\n                    courses: coursesSorted\n                });\n            });\n\n            if (callback != null) {\n                callback(universitiesSorted);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for getting all faculties of a university\n * @param {String} universityId Id of the university for which all faculties should be returend\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getUniversityById(universityId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/${universityId}`)\n        .then(response => {\n            // Sort courses of faculties by name alphabetically\n            response.data.faculties.forEach(item => {\n                item.courses.sort((a, b) => a.name.localeCompare(b.name));\n            });\n\n            // Sort order of faculties by name alphabetically\n            response.data.faculties.sort((a, b) => a.name.localeCompare(b.name));\n            if (callback != null) {\n                callback(response);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for getting all faculties of a university, sorted by name alphabetically\n * @param {String} universityId Id of the university for which all faculties should be returend\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getUniversityFacultiesSorted(universityId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/${universityId}`)\n        .then(response => {\n            const faculties = response.data.faculties;\n            let facultiesSorted = [];\n            faculties\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .forEach(item => {\n                    let coursesSorted = [];\n                    item.courses\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .forEach(item => {\n                            coursesSorted.push(item);\n                        });\n\n                    facultiesSorted.push({\n                        _id: item._id,\n                        name: item.name,\n                        courses: coursesSorted\n                    });\n                });\n\n            if (callback != null) {\n                callback(facultiesSorted);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for creating a new university\n * @param {Object} payload\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function createUniversity(payload, callback, errorcallback) {\n    axios\n        .post(`${API_URL}`, payload)\n        .then(response => {\n            if (callback != null) {\n                callback(response);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n","import axios from 'axios';\nimport { SERVER_API } from '../config';\n\nconst API_URL = `${SERVER_API}/course`;\n\n/**\n * API Endpoint for creating a new create\n * @param {Object} payload course which should be created\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function createCourse(payload, callback, errorcallback) {\n    axios\n        .post(`${API_URL}`, payload)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n","import React, { Component } from 'react';\nimport { Button, Form, Card } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport '../App.css';\nimport {\n    getAllUniversitiesSorted,\n    getUniversityFacultiesSorted\n} from '../services/UniversityService';\nimport { createCourse } from '../services/CourseService';\n\nconst styles = () => ({\n    button_box: {\n        position: 'relative',\n        paddingTop: '2rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    card: {\n        color: 'black',\n        minHeight: '30vh',\n        fontSize: 'large'\n    },\n    padding_card: {\n        paddingTop: '1rem'\n    },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '1rem'\n    },\n    padding_top: {\n        paddingTop: '2rem'\n    }\n});\n\nconst defaultState = {\n    name: '',\n    university: '',\n    faculty: '',\n    availableUniversities: [],\n    availableFaculties: [],\n    errors: []\n};\n\n// /components/CreateCourse.js\nclass CreateCourse extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n\n    componentDidMount() {\n        getAllUniversitiesSorted(\n            universitiesSorted => {\n                this.setState({\n                    availableUniversities: universitiesSorted\n                });\n                if (universitiesSorted.length > 0 && universitiesSorted[0].faculties.length > 0) {\n                    const availableFacultiesSorted = universitiesSorted[0].faculties.sort((a, b) =>\n                        a.name.localeCompare(b.name)\n                    );\n\n                    this.setState({\n                        university: universitiesSorted[0]._id,\n                        availableFaculties: availableFacultiesSorted,\n                        faculty: availableFacultiesSorted[0]._id\n                    });\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({ errors: [] });\n    };\n\n    onCancel = e => {\n        e.preventDefault();\n        this.props.history.push('');\n    };\n\n    // Refactor this to use university service\n    onChangeUniversity = e => {\n        const universityId = e.target.value;\n        this.setState({ [e.target.name]: universityId });\n\n        getUniversityFacultiesSorted(\n            universityId,\n            facultiesSorted => {\n                // Set the selected university to the first displayed university\n                if (facultiesSorted.length > 0) {\n                    this.setState({\n                        faculty: facultiesSorted[0]._id,\n                        availableFaculties: facultiesSorted\n                    });\n                } else {\n                    this.setState({\n                        faculty: '',\n                        availableFaculties: []\n                    });\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    validateInput() {\n        let input = this.state.name;\n        let errors = [];\n        if (input === '') {\n            errors['name'] = 'Please enter a course name!';\n            this.setState({\n                errors: errors\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                name: this.state.name,\n                university: this.state.university,\n                faculty: this.state.faculty\n            };\n            createCourse(\n                data,\n                () => {\n                    this.setState(defaultState);\n                    this.props.history.push('/home');\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.component}>\n                    <div className={`container ${classes.padding_top}`}>\n                        <h2>Create Course</h2>\n                        <div className={`${classes.padding_card}`}>\n                            <Card className={classes.card}>\n                                <Form onSubmit={this.onSubmit} className={classes.form}>\n                                    <Form.Group>\n                                        <Form.Label>University</Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"university\"\n                                            onChange={this.onChangeUniversity}>\n                                            {this.state.availableUniversities.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                        <Form.Text className=\"text-muted\">\n                                            Select the University of the course which you would like\n                                            to create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Faculty</Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"faculty\"\n                                            onChange={this.onChange}>\n                                            {this.state.availableFaculties.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                        <Form.Text className=\"text-muted\">\n                                            Select the Faculty of the course which you would like to\n                                            create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formCreateCourseName\">\n                                        <Form.Label>Course Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={this.onChange}\n                                            rows={1}\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                            Enter the course name which you would like to create!\n                                        </Form.Text>\n                                        <div className=\"text-danger\">{this.state.errors.name}</div>\n                                    </Form.Group>\n                                </Form>\n                            </Card>\n                            <div className={classes.button_box}>\n                                {/* Create Button */}\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onSubmit}>\n                                    Create\n                                </Button>\n\n                                {/* Cancel Button */}\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onCancel}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(CreateCourse);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Row, Col, Form, Toast } from 'react-bootstrap/';\nimport AuthService from '../services/AuthService';\nimport { getAllUniversitiesSorted } from '../services/UniversityService';\nimport DatePicker from 'react-date-picker';\nimport Select from 'react-select';\nimport PasswordStrengthBar from 'react-password-strength-bar';\n\nimport './styles/styles.css';\n\nconst styles = () => ({\n    container: {\n        paddingTop: '2rem',\n        paddingBottom: '10px'\n    },\n    row__padding_right: {\n        paddingRight: '20px'\n    },\n    label__padding_top: {\n        paddingTop: '10px'\n    },\n    button_box: {\n        position: 'absolute',\n        paddingTop: '2rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '90vh',\n        color: 'black'\n    },\n    button: {\n        width: '10rem',\n        height: '3rem'\n    },\n    button_padding_right: {\n        paddingRight: '20px'\n    },\n    row_padding_top: {\n        paddingTop: '1rem'\n    },\n    title_padding_bottom: {\n        paddingBottom: '1rem'\n    },\n    datePicker: {\n        color: '#495057',\n        borderColor: '#495057'\n    },\n    datePickerWrapper: {\n        display: 'block',\n        width: '30%',\n        padding: '.375rem .75rem',\n        fontSize: '1rem',\n        lineHeight: '1.5',\n        color: '#495057',\n        backgroundColor: '#fff',\n        backgroundClip: 'padding-box',\n        border: '1px solid #ced4da',\n        borderRadius: '.25rem',\n        transition: 'border-color .15s ease-in-out,box-shadow .15s ease-in-out'\n    },\n    passwordStrengthBar: {\n        height: '1rem'\n    }\n});\n\nconst defaultState = {\n    firstName: '',\n    lastName: '',\n    password: '',\n    confirmPassword: '',\n    gender: 'male',\n    semester: 1,\n    program: 'bachelor',\n    dateOfBirth: new Date(),\n    lastOnline: new Date(),\n    role: 'student',\n    email: '',\n    errors: {},\n    universities: [],\n    languages: [],\n    university: '',\n    duplicateEmail: false,\n    postalCode: '',\n    adress: ''\n};\n\nconst semesterCount = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst degree = [\n    {\n        bachelor: 'Bachelor'\n    },\n    {\n        master: 'Master'\n    },\n    {\n        graduate: 'Graduate'\n    }\n];\nconst roles = [\n    {\n        student: 'Student'\n    },\n    {\n        tutor: 'Tutor'\n    },\n    {\n        admin: 'Admin'\n    }\n];\n\nconst languages = [\n    { value: 'German', label: 'German' },\n    { value: 'English', label: 'English' },\n    { value: 'French', label: 'French' }\n];\nconst gender = [{ male: 'Male' }, { female: 'Female' }, { undefined: 'Undefined' }];\n\n// /components/RegisterUser.js\nclass RegisterUser extends Component {\n    constructor() {\n        super();\n\n        this.state = defaultState;\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    onChangeNumber = e => {\n        const number = Number(e.target.value);\n        this.setState({ [e.target.name]: number });\n    };\n\n    onCancel = e => {\n        e.preventDefault();\n        this.props.history.push('/home');\n    };\n\n    onChangeDatePicker = e => {\n        this.setState({ dateOfBirth: e });\n    };\n\n    onRegister = e => {\n        e.preventDefault();\n        console.log(this.state);\n\n        if (this.validateInput()) {\n            const data = {\n                email: this.state.email,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                password: this.state.password,\n                gender: this.state.gender,\n                semester: this.state.semester,\n                program: this.state.program,\n                dateOfBirth: this.state.dateOfBirth,\n                lastOnline: this.state.lastOnline,\n                postalCode: this.state.postalCode,\n                adress: this.state.adress,\n                languages: this.state.languages,\n                role: this.state.role\n            };\n            AuthService.register(\n                data,\n                response => {\n                    this.setState(defaultState);\n                    this.props.history.push('/home');\n                },\n                error => {\n                    if (error.response.data && error.response.status === 400) {\n                        this.setState({ duplicateEmail: true });\n                    }\n                    console.error(error);\n                }\n            );\n        }\n    };\n\n    componentDidMount() {\n        getAllUniversitiesSorted(\n            response => {\n                let universitiesMapped = [];\n                response.map((item, index) => {\n                    universitiesMapped.push({\n                        value: item._id,\n                        label: item.name\n                    });\n                });\n                this.setState({\n                    universities: universitiesMapped\n                });\n\n                if (universitiesMapped.length != 0) {\n                    this.setState({\n                        university: universitiesMapped[0].value\n                    });\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    onChangeLanguages = e => {\n        let languages = e.map(language => language.label);\n        this.setState({\n            languages: languages\n        });\n    };\n\n    /**\n     * Validates wether all user inputs are in the correct format/filled out\n     * @returns {Boolean} true if all required fields are filled out.\n     */\n    validateInput() {\n        let input = this.state;\n        let errors = {};\n        let isValid = true;\n\n        if (input['firstName'] === '') {\n            isValid = false;\n            errors['firstName'] = 'Please enter your first name!';\n        }\n        if (input['lastName'] === '') {\n            isValid = false;\n            errors['lastName'] = 'Please enter your last name!';\n        }\n\n        if (input['email'] !== '') {\n            const regExp =\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (!regExp.test(input['email'])) {\n                isValid = false;\n                errors['email'] = 'Please enter a valid email adress!';\n            }\n        } else if (input['email'] === '') {\n            isValid = false;\n            errors['email'] = 'Please enter an email adress!';\n        }\n\n        if (input['password'] === '') {\n            isValid = false;\n            errors['password'] = 'Please enter a password!';\n        }\n\n        if (input['confirmPassword'] === '') {\n            isValid = false;\n            errors['confirmPassword'] = 'Please enter your password confirmation';\n        }\n\n        if (input['password'] !== '' && input['confirmPassword'] !== '') {\n            if (input['password'] !== input['confirmPassword']) {\n                errors['password'] = \"Your passwords don't match\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n\n        return isValid;\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        var optionState = this.props.optionState;\n        return (\n            <div className={classes.component}>\n                <div className=\"container\">\n                    <div className={classes.container}>\n                        <h2 className={`${classes.title_padding_bottom}`}>Register User</h2>\n                        <div className={`card col-12 login-card mt-2 hv-center`}>\n                            <form>\n                                <div className={classes.row_padding_top}>\n                                    <div class=\"row row-cols-3\">\n                                        {/* First name input */}\n                                        <div class=\"col\">\n                                            <label htmlFor=\"firstNameInput\">First Name</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"firstName\"\n                                                className=\"form-control\"\n                                                id=\"firstName\"\n                                                placeholder=\"Max\"\n                                                value={this.state.firstName}\n                                                onChange={this.onChange}\n                                            />\n                                            <div className=\"text-danger\">\n                                                {this.state.errors.firstName}\n                                            </div>\n                                        </div>\n\n                                        {/* First name input */}\n                                        <div class=\"col\">\n                                            <label htmlFor=\"lastNameInput\">Last Name</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"lastName\"\n                                                className=\"form-control\"\n                                                id=\"lastName\"\n                                                placeholder=\"Mustermann\"\n                                                value={this.state.lastName}\n                                                onChange={this.onChange}\n                                            />\n                                            <div className=\"text-danger\">\n                                                {this.state.errors.lastName}\n                                            </div>\n                                        </div>\n\n                                        {/* Gender input control */}\n                                        <div>\n                                            <Form.Group\n                                                controlId=\"gender\"\n                                                className={classes.row__padding_right}>\n                                                <Form.Label>Gender</Form.Label>\n                                                <Form.Control\n                                                    name=\"gender\"\n                                                    as=\"select\"\n                                                    onChange={this.onChange}>\n                                                    {gender.map((item, _) => (\n                                                        <option value={Object.keys(item)[0]}>\n                                                            {Object.values(item)[0]}\n                                                        </option>\n                                                    ))}\n                                                </Form.Control>\n                                            </Form.Group>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* Email input */}\n                                <div className={classes.label__padding_top}>\n                                    <label htmlFor=\"exampleInputEmail\">Email address</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        id=\"email\"\n                                        placeholder=\"mail@example.com\"\n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                    />\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </small>\n                                    <div className=\"text-danger\">{this.state.errors.email}</div>\n                                    <div className=\"text-danger\">\n                                        {this.state.duplicateEmail\n                                            ? 'Email already exists, try logging on with this email!'\n                                            : ''}\n                                    </div>\n                                </div>\n\n                                {/** Date of birth input */}\n                                <div class={`${classes.label__padding_top}`}>\n                                    <div class={`row row-cols-2`}></div>\n                                    <Row>\n                                        <Col>\n                                            <label>Date of birth</label>\n                                            <Row />\n                                            <div className={classes.datePickerWrapper}>\n                                                <DatePicker\n                                                    wrapperClassName=\"datePicker\"\n                                                    disableCalendar\n                                                    clearIcon\n                                                    format={'dd-MM-y'}\n                                                    onChange={this.onChangeDatePicker}\n                                                    calendarAriaLabel={'Date of birth'}\n                                                    required={true}\n                                                    isClearable={false}\n                                                    value={new Date()}></DatePicker>\n                                            </div>\n                                        </Col>\n                                        <Col>\n                                            <label>Languages</label>\n                                            <Select\n                                                isMulti\n                                                options={languages}\n                                                onChange={this.onChangeLanguages}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row></Row>\n                                </div>\n                                <div class={`${classes.label__padding_top}`}>\n                                    <div class={`row row-cols-2`}></div>\n                                    <Row>\n                                        <Col>\n                                            <label>Postal Code</label>\n                                            <input\n                                                type=\"number\"\n                                                name=\"postalCode\"\n                                                className=\"form-control\"\n                                                min=\"10000\"\n                                                max=\"99999\"\n                                                id=\"postalCode\"\n                                                placeholder=\"\"\n                                                value={this.state.postalCode}\n                                                onChange={this.onChange}\n                                            />\n                                            <Row />\n                                        </Col>\n                                        <Col>\n                                            <label>Adress</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"adress\"\n                                                className=\"form-control\"\n                                                id=\"adress\"\n                                                placeholder=\"Adress\"\n                                                value={this.state.adress}\n                                                onChange={this.onChange}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row></Row>\n                                </div>\n\n                                {/* Password input */}\n                                <div className={`text-left ${classes.label__padding_top}`}>\n                                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        placeholder=\"Password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    <PasswordStrengthBar password={this.state.password} />\n                                    <div className=\"text-danger\">{this.state.errors.password}</div>\n                                </div>\n\n                                {/* Confirm password input */}\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                                    <input\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        className=\"form-control\"\n                                        id=\"confirmPassword\"\n                                        placeholder=\"Confirm Password\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    <div className=\"text-danger\">\n                                        {this.state.errors.confirmPassword}\n                                    </div>\n                                </div>\n\n                                <div class={`${classes.container} row row-cols-4`}>\n                                    {/* University input option */}\n                                    <div class=\"col\">\n                                        <Form.Group controlId=\"university\">\n                                            <Form.Label>University</Form.Label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                name=\"university\"\n                                                onChange={this.onChange}>\n                                                {this.state.universities.map((item, _) => (\n                                                    <option value={item.value}>{item.label}</option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n\n                                    {/* Program input option */}\n                                    <div class=\"col\">\n                                        <Form.Group controlId=\"degree\" onChange={this.onChange}>\n                                            <Form.Label>Program</Form.Label>\n                                            <Form.Control name=\"program\" as=\"select\">\n                                                {degree.map((item, _) => (\n                                                    <option value={Object.keys(item)[0]}>\n                                                        {Object.values(item)[0]}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n\n                                    {/* Semester input option */}\n                                    <div class=\"col\">\n                                        <Form.Group\n                                            controlId=\"semester\"\n                                            onChange={this.onChangeNumber}>\n                                            <Form.Label>Semester</Form.Label>\n                                            <Form.Control\n                                                name=\"semester\"\n                                                as=\"select\"\n                                                value={this.state.value}>\n                                                {semesterCount.map((item, _) => (\n                                                    <option value={item}>{item}</option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n\n                                    {/* User role input option */}\n                                    <div class=\"col\">\n                                        <Form.Group controlId=\"role\">\n                                            <Form.Label>Role</Form.Label>\n                                            <Form.Control\n                                                name=\"role\"\n                                                as=\"select\"\n                                                value={optionState}\n                                                onChange={this.onChange}\n                                                value={this.state.role}>\n                                                {roles.map((item, _) => (\n                                                    <option value={Object.keys(item)[0]}>\n                                                        {Object.values(item)[0]}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n                                </div>\n\n                                <div className={classes.button_box}>\n                                    {/* Register Button */}\n                                    <div className=\"form-group\">\n                                        <button\n                                            className={`btn btn-primary btn-lg`}\n                                            onClick={this.onRegister}>\n                                            <span>Register</span>\n                                        </button>\n                                        <button\n                                            className={`btn btn-primary btn-secondary btn-lg`}\n                                            onClick={this.onCancel}>\n                                            <span>Cancel</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(RegisterUser);\n","import { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport AuthService from '../services/AuthService';\nconst styles = theme => ({\n    button__padding_top: {\n        paddingTop: '20px'\n    }\n});\nclass HomeScreen extends Component {\n    onClick() {\n        console.log(AuthService.getCurrentUser());\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div>Homescreen currently to access the different routes:</div>\n\n                <div>\n                    <button>\n                        <a href=\"/register-user\" className={classes.button__padding_top}>\n                            Register User\n                        </a>\n                    </button>\n                    <button>\n                        <a href=\"/show-sessions\" className={classes.button__padding_top}>\n                            Show Tutorial Sessions\n                        </a>\n                    </button>\n                    <button>\n                        <a href=\"/create-tutorial-session\" className={classes.button__padding_top}>\n                            Create Tutorial Session\n                        </a>\n                    </button>\n                    <button>\n                        <a href=\"/login-user\" className={classes.button__padding_top}>\n                            Login User\n                        </a>\n                    </button>\n                    <button onClick={this.onClick}>Test Button</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(HomeScreen);\n","import React, { Component } from 'react';\nimport { Form, Card, Button } from 'react-bootstrap';\nimport { createUniversity } from '../services/UniversityService';\nimport { withStyles } from '@material-ui/styles';\n\nconst defaultState = {\n    name: '',\n    errors: {}\n};\n\nconst styles = () => ({\n    button_box: {\n        position: 'absolute',\n        paddingTop: '2rem',\n        paddingLeft: '1rem'\n    },\n    padding_top: {\n        paddingTop: '2rem'\n    },\n    padding_card: {\n        paddingTop: '1rem'\n    },\n    card: {\n        color: 'black',\n        minHeight: '18vh',\n        fontSize: 'large'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '1rem'\n    }\n});\n\n// /components/CreateUniversity.js\nclass CreateUniversity extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({ errors: [] });\n    };\n\n    onCancel = e => {\n        this.props.history.push('/home');\n    };\n\n    validateInput() {\n        let input = this.state.name;\n        let errors = [];\n        if (input === '') {\n            errors['name'] = 'Please enter a university name!';\n            this.setState({\n                errors: errors\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    onSubmit = async e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                name: this.state.name\n            };\n\n            createUniversity(\n                data,\n                () => {\n                    this.props.history.push('/home');\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.component}>\n                    <div className={`container ${classes.padding_top}`}>\n                        <h2>Create University</h2>\n                        <div className={`${classes.padding_card}`}>\n                            <Card className={classes.card}>\n                                <Form onSubmit={this.onSubmit} className={classes.form}>\n                                    <Form.Group>\n                                        <Form.Label>University Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={this.onChange}\n                                            rows={1}></Form.Control>\n                                        <div className=\"text-danger\">{this.state.errors.name}</div>\n                                        <Form.Text className=\"text-muted\">\n                                            Enter the university name which you would like to\n                                            create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form>\n                            </Card>\n                            <div className={classes.button_box}>\n                                <div className=\"form-group\">\n                                    {/* Register Button */}\n                                    <Button\n                                        variant=\"primary\"\n                                        size=\"lg\"\n                                        active\n                                        className={classes.button}\n                                        onClick={this.onSubmit}>\n                                        Create\n                                    </Button>\n\n                                    {/* Cancel Button */}\n                                    <Button\n                                        variant=\"secondary\"\n                                        size=\"lg\"\n                                        active\n                                        className={classes.button}\n                                        onClick={this.onCancel}>\n                                        Cancel\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(CreateUniversity);\n","import axios from 'axios';\nimport { SERVER_API } from '../config';\n\nconst API_URL = `${SERVER_API}/faculty`;\n\n/**\n * API Endpoint for getting all available faculties\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getAllFaculties(callback, errorcallback) {\n    axios\n        .get(`${API_URL}`)\n        .then(response => {\n            if (callback != null) {\n                callback(response);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for getting all available faculties, sorted alphabetically by name\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsucecssful\n */\nexport function getAllFacultiesSorted(callback, errorcallback) {\n    axios\n        .get(`${API_URL}`)\n        .then(response => {\n            const faculties = response.data;\n            let facultiesSorted = [];\n\n            faculties\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .forEach(item => {\n                    facultiesSorted.push({\n                        _id: item._id,\n                        name: item.name\n                    });\n                });\n            if (callback != null) {\n                callback(facultiesSorted);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for getting all courses of a faculty, sorted alphabetically by name\n * @param {String} facultyId Id of the faculty for which all courses should are fetched\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getFacultyCoursesSorted(facultyId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/courses/${facultyId}`)\n        .then(courses => {\n            let coursesSorted = [];\n            courses.data\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .forEach(item => {\n                    coursesSorted.push({ _id: item._id, name: item.name });\n                });\n\n            if (callback != null) {\n                callback(coursesSorted);\n            }\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n\n/**\n * API Endpoint for creating a new faculty\n * @param {Object} payload faculty which should be created\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function createFaculty(payload, callback, errorcallback) {\n    axios\n        .post(`${API_URL}`, payload)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n","import React, { Component } from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport { getAllUniversitiesSorted } from '../services/UniversityService';\nimport { createFaculty as create } from '../services/FacultyService';\nconst defaultState = {\n    name: '',\n    university: '',\n    universities: [],\n    errors: []\n};\n\nconst styles = () => ({\n    button_box: {\n        position: 'relative',\n        paddingTop: '1rem'\n    },\n    top_padding: {\n        paddingTop: '2rem'\n    },\n    padding_card: {\n        paddingTop: '1rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    card: {\n        color: 'black',\n        minHeight: '25vh',\n        fontSize: 'large'\n    },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '1rem'\n    }\n});\n\n// /components/CreateFaculty.js\nclass createFaculty extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n\n    componentDidMount() {\n        getAllUniversitiesSorted(\n            universitiesSorted => {\n                this.setState({\n                    universities: universitiesSorted\n                });\n\n                if (universitiesSorted.length > 0) {\n                    this.setState({\n                        university: universitiesSorted[0]._id\n                    });\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    validateInput() {\n        let input = this.state.name;\n        let errors = [];\n        if (input === '') {\n            errors['name'] = 'Please enter a faculty name!';\n            this.setState({\n                errors: errors\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({ errors: [] });\n    };\n\n    onCancel = e => {\n        this.props.history.push('/home');\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                name: this.state.name,\n                university: this.state.university\n            };\n\n            create(\n                data,\n                res => {\n                    this.setState(defaultState);\n                    this.props.history.push('/home');\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.component}>\n                    <div className={`container ${classes.top_padding}`}>\n                        <h2>Create Faculty</h2>\n                        <div className={`${classes.padding_card}`}>\n                            <Card className={classes.card}>\n                                <Form onSubmit={this.onSubmit} className={classes.form}>\n                                    <Form.Group>\n                                        <Form.Label>University</Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"university\"\n                                            onChange={this.onChange}>\n                                            {this.state.universities.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                        <Form.Text className=\"text-muted\">\n                                            Select the university of the faculty which you would\n                                            like to create!\n                                        </Form.Text>\n                                    </Form.Group>\n\n                                    {/* Faculty Name input */}\n                                    <Form.Group>\n                                        <Form.Label>Faculty Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={this.onChange}\n                                            rows={1}></Form.Control>\n                                        <div className=\"text-danger\">{this.state.errors.name}</div>\n                                        <Form.Text className=\"text-muted\">\n                                            Enter the faculty name which you would like to create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form>\n                            </Card>\n                            <div className={classes.button_box}>\n                                {/* Create Button */}\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onSubmit}>\n                                    Create\n                                </Button>\n\n                                {/* Cancel Button */}\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onCancel}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(createFaculty);\n","import axios from 'axios';\n\nimport { SERVER_API } from '../config';\n\nconst API_URL = `${SERVER_API}/user`;\n\n/**\n * API Endpoint for getting all necessary tutor information of a tutor\n * @param {String} tutorId Id of the tutor for which the information should be fetched\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getTutorById(tutorId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/${tutorId}`)\n        .then(response => {\n            if (callback != null) {\n                callback(response);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n\n/**\n * API Endpoint for getting all booked offerings of a tutor\n * @param {String} tutorId\n * @param {Function} callback\n * @param {Function} errorcallback\n */\nexport function getBookedOfferingsByUserId(tutorId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/booked-offerings/${tutorId}`)\n        .then(response => {\n            if (callback != null) {\n                callback(response);\n            }\n        })\n        .catch(error => {\n            if (errorcallback != null) {\n                errorcallback(error);\n            }\n        });\n}\n","import axios from 'axios';\nimport { SERVER_API } from '../config';\nimport { getBookedOfferingsByUserId } from '../services/TutorService';\nconst API_URL = `${SERVER_API}/session`;\n\n/**\n * API Endpoint for creating a new tutorial session\n * @param {Object} payload session which should be created\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccesful\n */\nexport function createSession(payload, callback, errorcallback) {\n    axios\n        .post(API_URL, payload)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n\n/**\n * API Endpoint for getting all available sessions\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getAllSessions(callback, errorcallback) {\n    axios\n        .get(API_URL)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n\n/**\n * API Endpoint for getting all sessions of a university\n * @param {String} payload id of the university\n * @param {Function} callback function executed if request is successful\n * @param {Function} errorcallback function executed if request is unsuccessful\n */\nexport function getAllSessionsByUniversity(universityId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/university/${universityId}`)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n\n/**\n * API Endpoint for getting all verified sessions of a university\n * @param {String} universityId\n * @param {Function} callback\n * @param {Function} errorcallback\n */\nexport async function getAllVerifiedSessionsByUniversity(universityId, callback, errorcallback) {\n    try {\n        axios\n            .get(`${API_URL}/verified/university/${universityId}`)\n            .then(response => {\n                callback(response);\n            })\n            .catch(error => {\n                errorcallback(error);\n            });\n    } catch (error) {\n        errorcallback(error);\n    }\n}\n\n/**\n * API Endpoint for getting a specific session by id\n * @param {String} sessionId\n * @param {Function} callback\n * @param {Function} errorcallback\n */\nexport function getSessionById(sessionId, callback, errorcallback) {\n    axios\n        .get(`${API_URL}/${sessionId}`)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n","import React, { Component } from 'react';\nimport { Button, Form, Card, Row } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport DateTimePicker from 'react-datetime-picker';\nimport NumericInput from 'react-numeric-input';\nimport { parseJwt } from '../services/AuthHeader';\nimport AuthService from '../services/AuthService';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n    getUniversityFacultiesSorted,\n    getAllUniversitiesSorted\n} from '../services/UniversityService';\nimport { getFacultyCoursesSorted } from '../services/FacultyService';\nimport { createSession } from '../services/SessionService';\nimport './styles/styles.css';\n\nconst styles = () => ({\n    title: {\n        position: 'relative',\n        paddingTop: '4rem',\n        paddingBottom: '1rem',\n        fontWeight: 'bold',\n        left: '-18rem'\n    },\n    component: {\n        position: 'relative',\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '95vh',\n        height: '0%'\n    },\n    card: {\n        position: 'absolute',\n        paddingTop: '1rem',\n        left: '15%',\n        width: '60%',\n        height: '67%'\n    },\n    vl: {\n        borderLeft: '1px solid #dfdfdf',\n        height: '52rem',\n        position: 'relative',\n        left: '50%',\n        marginLeft: '-3px',\n        paddingTop: '10px'\n    },\n    form_option: {\n        paddingTop: '1.1rem',\n        paddingLeft: '20px',\n        width: '20rem'\n    },\n    form_label: {\n        paddingTop: '2.2rem',\n        paddingLeft: '50px',\n        fontSize: '17px'\n    },\n    file_selector: {\n        paddingTop: '1.12rem',\n        paddingLeft: '20px',\n        width: '20rem'\n    },\n    form_selectors: {\n        paddingTop: '8px',\n        paddingLeft: '5rem'\n    },\n    date_picker: {\n        paddingLeft: '20px',\n        width: '20rem',\n        paddingTop: '1.1rem'\n    },\n    numeric_input: {\n        paddingTop: '2.2rem',\n        paddingLeft: '20px'\n    },\n    checkmarks_left: {\n        paddingTop: '2.2rem',\n        paddingLeft: '20px'\n    },\n    description_area: {\n        width: '40rem'\n    },\n    padding_top: {\n        paddingTop: '1rem'\n    },\n    button_box: {\n        position: 'absolute',\n        right: '1rem',\n        paddingTop: '5rem'\n    },\n    button: {\n        width: '10rem',\n        height: '3rem'\n    }\n});\n\nconst defaultState = {\n    university: '',\n    faculty: '',\n    course: '',\n    price: 1,\n    remote: false,\n    onsite: false,\n    description: '',\n    tutorId: '',\n    date: new Date(),\n    duration: 30,\n    availableUniversities: [],\n    availableFaculties: [],\n    availableCourses: []\n};\n\nconst labels = [\n    'Choose the University of your Course',\n    'Choose the Faculty of your Course',\n    'Choose the Course that you are offering',\n    'Upload CV',\n    'Upload relevant course transcripts',\n    'Dates/Time offered',\n    'Enter your hourly price (€/h)',\n    'Description'\n];\n\n// /components/CreateTutorialSession.js\nclass CreateTutorialSession extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    onChangePrice = e => {\n        this.setState({ price: e + 1 });\n    };\n\n    onChangeDate = e => {\n        this.setState({\n            date: Date.parse(e)\n        });\n    };\n\n    onCreate = e => {\n        const payload = {\n            university: this.state.university,\n            faculty: this.state.faculty,\n            course: this.state.course,\n            tutorId: this.state.tutorId,\n            description: this.state.description,\n            onsite: this.state.onsite,\n            remote: this.state.remote,\n            date: this.state.date,\n            price: this.state.price,\n            status: 'verified'\n        };\n\n        createSession(\n            payload,\n            () => {},\n            error => {\n                console.error(error);\n            }\n        );\n\n        this.props.history.push('/home');\n    };\n\n    onClickCheckmark = e => {\n        this.setState({ [e.target.name]: e.target.checked });\n    };\n\n    onChangeUniversity = e => {\n        const universityId = e.target.value;\n        this.setState({ university: universityId });\n\n        getUniversityFacultiesSorted(\n            universityId,\n            facultiesSorted => {\n                if (facultiesSorted.length > 0) {\n                    const facultyId = facultiesSorted[0]._id;\n                    this.setState({\n                        faculty: facultyId,\n                        availableFaculties: facultiesSorted\n                    });\n\n                    const initialCourses = facultiesSorted[0].courses;\n\n                    if (initialCourses.length > 0) {\n                        this.setState({\n                            courses: initialCourses[0]._id,\n                            availableCourses: initialCourses\n                        });\n                    } else {\n                        this.setState({\n                            courses: '',\n                            availableCourses: []\n                        });\n                    }\n                } else {\n                    this.setState({\n                        faculty: '',\n                        availableFaculties: [],\n                        course: '',\n                        availableCourses: []\n                    });\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    onChangeFaculty = e => {\n        const facultyId = e.target.value;\n\n        getFacultyCoursesSorted(\n            facultyId,\n            coursesSorted => {\n                if (coursesSorted.length > 0) {\n                    this.setState({\n                        course: coursesSorted[0]._id,\n                        availableCourses: coursesSorted\n                    });\n                } else {\n                    this.setState({\n                        course: '',\n                        availableCourses: []\n                    });\n                }\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    };\n\n    validateInput() {\n        let input = this.state;\n        if (input['university'] === '' || input['faculty'] === '' || input['course'] === '') {\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        // Set the tutor id to the user which is currently logged in\n        const currentUserToken = AuthService.getCurrentUser();\n        const currentUserId = parseJwt(currentUserToken)._id;\n\n        // Set the tutor to the current logged in user\n        this.setState({ tutorId: currentUserId });\n\n        getAllUniversitiesSorted(\n            universitiesSorted => {\n                this.setState({\n                    availableUniversities: universitiesSorted\n                });\n\n                // Faculties of the first university selected\n                const initialFaculty = universitiesSorted[0].faculties;\n                if (universitiesSorted.length > 0 && initialFaculty.length > 0) {\n                    const availableFacultiesSorted = initialFaculty.sort((a, b) =>\n                        a.name.localeCompare(b.name)\n                    );\n\n                    const initialFacultyId = availableFacultiesSorted[0]._id;\n                    this.setState({\n                        university: universitiesSorted[0]._id,\n                        availableFaculties: availableFacultiesSorted,\n                        faculty: initialFacultyId\n                    });\n\n                    // Courses of the first faculty selected\n                    const initialCourses = initialFaculty[0].courses;\n\n                    if (initialCourses.length > 0) {\n                        this.setState({\n                            course: initialCourses[0]._id,\n                            availableCourses: initialCourses\n                        });\n                    } else {\n                        this.setState({\n                            course: '',\n                            availableCourses: []\n                        });\n                    }\n                }\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.component}>\n                <div className={`container ${classes.padding_top}`}>\n                    <h2 className={`${classes.title}`}>Create Tutorial Session</h2>\n                    <Card className={classes.card}>\n                        <Form>\n                            <Row>\n                                {/** First Column with labels describin the right input */}\n                                <div className=\"col-sm-4\">\n                                    {labels.map((item, _) => (\n                                        <div>\n                                            <Form.Label className={classes.form_label}>\n                                                {item}\n                                            </Form.Label>\n                                        </div>\n                                    ))}\n                                </div>\n\n                                {/** Vertical Separator */}\n                                <div className=\"col-sm-0\">\n                                    <div className={classes.vl}></div>\n                                </div>\n                                <div className={`${classes.form_selectors} col-sm-3`}>\n                                    {/** Form for selecting the unversity*/}\n                                    <Form.Group\n                                        controlId=\"universityGroup\"\n                                        className={classes.form_option}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"university\"\n                                            onChange={this.onChangeUniversity}>\n                                            {this.state.availableUniversities.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    {/** Form for selecting the corresponding faculty*/}\n                                    <Form.Group\n                                        controlId=\"universityGroup\"\n                                        className={classes.form_option}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"faculty\"\n                                            onChange={this.onChangeFaculty}>\n                                            {this.state.availableFaculties.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    {/** Form for selecting the corresponding course*/}\n                                    <Form.Group\n                                        controlId=\"universityGroup\"\n                                        className={classes.form_option}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"course\"\n                                            onChange={this.onChange}>\n                                            {this.state.availableCourses.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    {/** Form for uploading a cv*/}\n                                    <Form.Group className={classes.file_selector}>\n                                        <Form.File id=\"cvFile\" />\n                                    </Form.Group>\n\n                                    {/** Right Form for selecting the corresponding course*/}\n                                    <Form.Group className={classes.file_selector}>\n                                        <Form.File id=\"transcriptFile\" />\n                                    </Form.Group>\n                                    <div className={classes.date_picker}>\n                                        <DateTimePicker\n                                            disableClock={true}\n                                            selected={this.state.date}\n                                            name=\"date\"\n                                            showTimeSelect\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                            onChange={this.onChangeDate}\n                                            className=\"tutorialSession\"></DateTimePicker>\n                                    </div>\n\n                                    {/** price Input Form  */}\n                                    <div className={classes.numeric_input}>\n                                        <NumericInput\n                                            className={'form-control'}\n                                            name=\"price\"\n                                            onChange={this.onChangePrice}\n                                            min={1}\n                                            max={100}\n                                            placeholder={1}\n                                        />\n                                    </div>\n\n                                    {/** Description Input Form  */}\n                                    <div className={classes.numeric_input}>\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"description\"\n                                            onChange={this.onChange}\n                                            placeholder=\"(max. 200 words)\"\n                                            rows={5}\n                                            className={classes.description_area}\n                                        />\n                                    </div>\n                                    <Row className={classes.padding_top}>\n                                        {/** Remote Checkmark */}\n                                        <div className=\"col-sm-4\">\n                                            <div className={classes.checkmarks_left}>\n                                                <Form.Check\n                                                    name=\"remote\"\n                                                    label=\"Remote\"\n                                                    onClick={this.onClickCheckmark}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/** Onsite Checkmark */}\n                                        <div className=\"col-sm-4\">\n                                            <div className={classes.checkmarks_left}>\n                                                <Form.Check\n                                                    name=\"onsite\"\n                                                    label=\"Onsite\"\n                                                    onClick={this.onClickCheckmark}\n                                                />\n                                            </div>\n                                        </div>\n                                    </Row>\n                                </div>\n                            </Row>\n                            <div className={classes.button_box}>\n                                {/* Register Button */}\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onCreate}>\n                                    Register\n                                </Button>\n\n                                {/* Cancel Button */}\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onCancel}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </Form>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(CreateTutorialSession);\n","import React, { Component, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport AuthService from '../services/AuthService';\nimport { withStyles } from '@material-ui/styles';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst styles = () => ({\n    card: {\n        left: '-1rem',\n        width: '30rem'\n    },\n    form: {\n        width: '60rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '92vh',\n        color: 'black'\n    },\n    login_form: {\n        paddingTop: '2rem',\n        left: '12rem',\n        position: 'relative'\n    },\n    register_button: {\n        position: 'relative',\n        paddingTop: '2rem',\n        width: '20rem',\n        left: '8.5rem'\n    },\n    padding_button_top: { paddingTop: '1rem' },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '1rem',\n        paddingBottom: '1rem'\n    },\n    passWordToggle: {\n        position: 'absolute',\n        top: '35.5%',\n        right: '7%',\n        color: 'grey'\n    }\n});\n\nclass LoginUser extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onTogglePassword = this.onTogglePassword.bind(this);\n\n        this.state = {\n            email: '',\n            password: '',\n            loading: false,\n            message: '',\n            passwordToggle: false\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onTogglePassword(e) {\n        this.setState({\n            passwordToggle: !this.state.passwordToggle\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: '',\n            loading: true\n        });\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.login(this.state.email, this.state.password).then(\n                result => {\n                    this.props.history.push('/home');\n                },\n                error => {\n                    const resMessage =\n                        (error.response && error.response.data && error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.component}>\n                <div className={`container ${classes.login_form}`}>\n                    <h2>Login</h2>\n                    <div className={`${classes.form}`}>\n                        <Card className={`${classes.card}`}>\n                            <Form\n                                className={`${classes.form}`}\n                                onSubmit={this.handleLogin}\n                                ref={c => {\n                                    this.form = c;\n                                }}>\n                                <div className={`${classes.padding_button_top} form-group`}>\n                                    <Input\n                                        placeholder=\"Email\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div>\n                                        <Input\n                                            placeholder=\"Password\"\n                                            type={this.state.passwordToggle ? 'text' : 'password'}\n                                            className=\"form-control\"\n                                            name=\"password\"\n                                            value={this.state.password}\n                                            onChange={this.onChangePassword}\n                                        />\n                                        <VisibilityIcon\n                                            onClick={this.onTogglePassword}\n                                            className={classes.passWordToggle}></VisibilityIcon>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button\n                                        className={`btn btn-primary btn-block `}\n                                        disabled={this.state.loading}>\n                                        {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )}\n                                        <span>Login</span>\n                                    </button>\n                                    <hr></hr>\n                                    <p className=\"text-muted\">\n                                        Don't have an account yet ?{' '}\n                                        <a href=\"/register-user\">Sign Up!</a>\n                                    </p>\n                                </div>\n                                {this.state.message && (\n                                    <div className=\"form-group\">\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            {this.state.message}\n                                        </div>\n                                    </div>\n                                )}\n                                <CheckButton\n                                    style={{ display: 'none' }}\n                                    ref={c => {\n                                        this.checkBtn = c;\n                                    }}\n                                />\n                            </Form>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(LoginUser);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card } from 'react-bootstrap/';\nimport Grid from '@material-ui/core/Grid';\nimport { getTutorById, getBookedOfferingsByUserId } from '../services/TutorService';\nimport { Rating } from '@material-ui/lab/';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles(theme => ({\n    component: {\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '2rem'\n    },\n    card: {\n        height: '22rem',\n        minHeight: '10rem',\n        maxHeight: '22rem',\n        paddingBottom: '2rem'\n    },\n    header_wrapper: {\n        paddingTop: '0.2rem',\n        paddingBottom: '0.2rem',\n        paddingLeft: '0.2rem',\n        paddingRight: '0.2rem',\n        backgroundColor: '#85bdee'\n    },\n    header: {\n        paddingTop: '0.5rem',\n        paddingLeft: '1rem'\n    },\n    button_wrapper: {\n        paddingTop: '0.2rem',\n        paddingBottom: '0.2rem'\n    },\n    button: {\n        height: '5rem',\n        width: '10rem',\n        minWidth: '2rem',\n        maxWidth: '10rem',\n        minHeight: '1rem',\n        maxHeight: '2.5rem',\n        backgroundColor: '#c6ddb4'\n    },\n    description_wrapper: {\n        height: '8rem',\n        maxHeight: '10rem',\n        paddingLeft: '1rem',\n        paddingRight: '2rem'\n    },\n    description: {\n        height: '8rem',\n        minHeight: '8rem',\n        paddingTop: '1rem',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        fontStyle: 'oblique'\n    },\n    image_wrapper: {\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        paddingRight: '0.5rem'\n    },\n    image: {\n        right: '20px',\n        paddingRight: '61px',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        height: 'auto'\n    },\n    gridImage: {\n        backgroundColor: 'white',\n        zIndex: 9999,\n        height: '16rem',\n        width: '16rem'\n    },\n    row_wrapper: {\n        height: '1rem',\n        minHeight: '1rem',\n        maxHeight: '1rem',\n        paddingLeft: '1rem'\n    }\n}));\n\nfunction TutorialSessionComponent(props) {\n    const [name, setName] = useState('');\n    const [lastOnline, setLastOnline] = useState('');\n    const [age, setAge] = useState('');\n    const [rating, setRating] = useState(0);\n    const [onsite, setOnsite] = useState(false);\n    const [remote, setRemote] = useState(false);\n    const [experience, setExperience] = useState(0);\n    const [languages, setLanguages] = useState([]);\n    const [postalCode, setPostalCode] = useState('');\n    const history = useHistory();\n\n    function OnClickButton(e) {\n        const sessionId = props.id;\n        history.push({\n            pathname: `/book-session/${sessionId}`\n        });\n    }\n\n    useEffect(() => {\n        setName(props.tutor.firstName);\n        const differenceInHours = (new Date() - new Date(props.lastOnline)) / 36e5;\n        let dateDifference = 0;\n\n        if (differenceInHours > 24) {\n            dateDifference = `${Math.floor(differenceInHours / 24)} days ago`;\n        } else if (Math.floor(differenceInHours) === 0) {\n            dateDifference = `${Math.floor(differenceInHours * 60)} minutes ago`;\n        } else {\n            dateDifference = `${Math.floor(differenceInHours)} hours ago`;\n        }\n        const ageDifference = new Date(new Date() - new Date(props.tutor.dateOfBirth));\n        const age = `${Math.abs(ageDifference.getUTCFullYear() - 1970)} years old`;\n\n        setLastOnline(dateDifference);\n        setAge(age);\n        setRating(props.tutor.averageRating);\n        setExperience(props.tutor.experience);\n        setLanguages(props.tutor.languages);\n        setPostalCode(props.tutor.postalCode);\n\n        if (props.remote) {\n            setRemote(true);\n        }\n\n        if (props.onsite) {\n            setOnsite(true);\n        }\n    }, [onsite, remote, name, lastOnline, experience, rating]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.component}>\n            <Card className={classes.card}>\n                <div className={classes.header_wrapper}>\n                    <Grid container spacing={1} className={classes.container}>\n                        <Grid item xs={10}>\n                            <div className={classes.header}>\n                                <h4>{props.name}</h4>\n                            </div>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <div className={classes.button_wrapper}>\n                                <button className={classes.button} onClick={OnClickButton}>\n                                    <span>Book Now</span>\n                                </button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className={classes.description_wrapper}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={10}>\n                            <div className={classes.description}>{props.description}</div>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <div className={classes.gridImage}>\n                                <img\n                                    className={classes.image}\n                                    src=\"https://icon-library.com/images/no-profile-picture-icon-female/no-profile-picture-icon-female-24.jpg\"\n                                    alt=\"new\"\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <hr />\n                <div className={classes.row_wrapper}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={4}>\n                            Price: {`${props.price}€/h`}\n                        </Grid>\n                        <Grid item xs={4}>\n                            Languages: {languages.join(', ')}\n                        </Grid>\n                        <Grid item xs={4}>\n                            Name: {name}\n                        </Grid>\n                    </Grid>\n                </div>\n                <hr />\n                <div className={classes.row_wrapper}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={4}>\n                            {`Experience: ${experience} sessions`}\n                        </Grid>\n                        <Grid item xs={4}>\n                            Location:\n                            {remote ? ' Remote' : ''}\n                            {onsite ? ' Onsite' : ''}\n                        </Grid>\n                        <Grid item xs={4}>\n                            Age: {age}\n                        </Grid>\n                    </Grid>\n                </div>\n                <hr />\n                <div className={classes.row_wrapper}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={4}>\n                            <Rating\n                                name=\"size-large\"\n                                value={rating}\n                                size=\"large\"\n                                readOnly\n                                precision={0.5}\n                                className={classes.rating}\n                            />\n                        </Grid>\n                        <Grid item xs={4}>\n                            Last Online: {lastOnline}\n                        </Grid>\n                        <Grid item xs={4}>\n                            Postal Code: {postalCode}\n                        </Grid>\n                    </Grid>\n                </div>\n            </Card>\n        </div>\n    );\n}\n\nexport default TutorialSessionComponent;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Form } from 'react-bootstrap/';\nimport SearchField from 'react-search-field';\nimport { TreeView, TreeItem, Rating } from '@material-ui/lab/';\nimport { makeStyles } from '@material-ui/styles';\nimport { getUniversityById } from '../services/UniversityService';\nimport { getAllVerifiedSessionsByUniversity } from '../services/SessionService';\nimport { FormControlLabel, Checkbox } from '@material-ui/core/';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Slider, Grid, FormGroup, Typography } from '@material-ui/core/';\nimport DatePicker from 'react-datepicker';\nimport TutorialSessionComponent from './TutorialSessionComponent';\nimport Select from 'react-select';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport './styles/styles.css';\n\nconst useStyles = makeStyles(theme => ({\n    component: {\n        paddingTop: '3rem',\n        paddingLeft: '1rem',\n        marginRight: '0px'\n    },\n    treepane: {\n        paddingTop: '1rem',\n        paddingLeft: '1rem'\n    },\n    searchField: {\n        height: '4.5rem',\n        width: '100%',\n        paddingLeft: '2rem',\n        paddingBottom: '2rem'\n    },\n    padding_top: {\n        paddingTop: '3rem'\n    },\n    padding_bottom: {\n        paddingBottom: '3rem'\n    },\n    tree_item_label: {\n        fontWeight: '550',\n        minWidth: '26rem',\n        fontSize: '19px',\n        width: '26rem',\n        paddingBottom: '0.2rem',\n        paddingTop: '0.2rem'\n    },\n    check_box_label: {\n        fontSize: 'medium',\n        width: '26rem'\n    },\n    checkbox_wrapper: {\n        maxHeight: '18rem',\n        width: '26rem',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        paddingLeft: '0.5rem'\n    },\n    check_box: {\n        height: '2rem'\n    },\n    card: {\n        width: '100%',\n        paddingTop: '1rem',\n        paddingLeft: '1rem',\n        paddingBottom: '1rem',\n        height: '55rem',\n        minHeight: '20rem',\n        maxHeight: '55rem',\n        overflowY: 'auto',\n        overflowX: 'hidden'\n    },\n    card_wrapper: {\n        paddingLeft: '2rem'\n    },\n    slider: {\n        width: 200,\n        paddingTop: '1rem'\n    },\n    slider_wrapper: {\n        paddingLeft: '2rem'\n    },\n    ratingFilter: {\n        paddingTop: '0.4rem'\n    },\n    ratingFilter_wrapper: {\n        width: '8rem',\n        paddingLeft: '3rem'\n    },\n    filterCol: {\n        paddingTop: '0rem'\n    },\n    datePicker: {\n        paddingTop: '0.3rem',\n        height: '2rem',\n        borderColor: '#ced4da'\n    },\n    sortSessions: {\n        paddingTop: '2rem'\n    },\n    sessionCard: {\n        height: '50rem',\n        maxHeight: '60rem',\n        minHeight: '55rem',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        width: '100%'\n    },\n    breadCrumb: {\n        paddingLeft: '1.5rem',\n        width: '85%',\n        paddingBottom: '0.5rem',\n        fontSize: 'larger'\n    },\n    breadCrumbItem: {\n        backgroundColor: 'white'\n    },\n    paginationComponent: {\n        paddingTop: '1rem',\n        position: 'absolute'\n    }\n}));\n\nfunction valuetext(value) {\n    return `${value}€`;\n}\n\nconst marks = [\n    {\n        value: 1,\n        label: '1€'\n    },\n    {\n        value: 50,\n        label: '50€'\n    }\n];\n\nconst languages = [\n    { value: 'German', label: 'German' },\n    { value: 'English', label: 'English' },\n    { value: 'French', label: 'French' }\n];\n\nconst ShowTutorialSessions = () => {\n    // All sessions are all sessions which are queried based on university\n    const [allSessions, setAllSessions] = useState([]);\n\n    // Displayed sessions are sessions which are displayed taking pagination into account\n    const [displayedSessions, setDisplayedSessions] = useState([]);\n\n    // Filtered sessions are sessions based on all filter criteria (price, rating, course, etc.)\n    const [filteredSessions, setFilteredSessions] = useState([]);\n    const [filteredCourses, setFilteredCourses] = useState([]);\n    const [faculties, setFaculties] = useState([]);\n    const [selectedCourses, setSelectedCourses] = useState([]);\n    const [location, setLocation] = useState(1);\n    const [language, setLanguage] = useState([]);\n    const [experience, setExperience] = useState(0);\n    const [price, setPriceFilter] = useState([1, 50]);\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null);\n    const [sortValue, setSortValue] = useState(-1);\n    const [initialRender, setInitialRender] = useState(true);\n    const [isLoading, setLoading] = useState(false);\n    const [rating, setRating] = useState(0);\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const [activePage, setActivePage] = useState(1);\n    const [numberOfPages, setNumberOfPages] = useState(1);\n\n    // For development purposes, will need to be either fetched dynamically by user/ passed on by props of hoc\n    const [university, setUniversity] = useState('60bff011a5e1000beeddb38e');\n    const [universityName, setUniversityName] = useState('');\n    useEffect(async () => {\n        setLoading(true);\n\n        // Prevent api call everytime a value changes\n        if (initialRender) {\n            getUniversityById(\n                university,\n                response => {\n                    setUniversityName(response.data.name);\n                    setFaculties(response.data.faculties);\n\n                    let tmp = [];\n                    response.data.courses.forEach((item, _) => {\n                        const course = {\n                            id: item._id,\n                            selected: false\n                        };\n                        tmp.push(course);\n                    });\n\n                    setSelectedCourses(tmp);\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n            await getAllVerifiedSessionsByUniversity(\n                university,\n                response => {\n                    // Initially display all sessions of the university\n                    console.log(response.data);\n                    setAllSessions(response.data);\n                    setFilteredSessions(response.data);\n                    setDisplayedSessions(response.data.slice(0, 2));\n                    setNumberOfPages(Math.ceil(response.data.length / 2));\n                },\n                error => {\n                    console.error(error);\n                }\n            );\n            setInitialRender(false);\n        }\n        filterSessions();\n        setLoading(false);\n    }, [location, price, experience, language, rating, filteredCourses, searchKeyword, activePage]);\n\n    const onSearch = e => {\n        setSearchKeyword(e);\n    };\n\n    const onChangeLocation = e => {\n        setLocation(e.target.value);\n    };\n\n    const onChangeSlider = (e, newValue) => {\n        setPriceFilter(newValue);\n    };\n\n    const filterSessions = () => {\n        let filteredSessions = [];\n        // Filter by selected courses\n        // If no checkbox is selected, we display all courses\n        if (filteredCourses.length === 0) {\n            filteredSessions = allSessions;\n        } else {\n            filteredSessions = allSessions.filter(session =>\n                filteredCourses.includes(session.course._id)\n            );\n        }\n\n        // Filter by minimum price range\n        const minimumPrice = price[0];\n        const maximumPrice = price[1];\n        filteredSessions = filteredSessions.filter(\n            session => session.price >= minimumPrice && session.price <= maximumPrice\n        );\n\n        // Filter by location\n        switch (location) {\n            case '1':\n                filteredSessions = filteredSessions;\n                break;\n\n            case '2':\n                filteredSessions = filteredSessions.filter(session => session.onsite);\n\n                break;\n            case '3':\n                filteredSessions = filteredSessions.filter(session => session.remote);\n                break;\n            default:\n                filteredSessions = filteredSessions;\n        }\n\n        // Filter by rating\n        filteredSessions = filteredSessions.filter(\n            session => session.tutorId.averageRating >= rating\n        );\n\n        // Filter by minimum experience\n        switch (experience) {\n            case '1':\n                filteredSessions = filteredSessions.filter(\n                    session => session.tutorId.experience > 0 && session.tutorId.experience < 50\n                );\n                break;\n            case '2':\n                filteredSessions = filteredSessions.filter(\n                    session => session.tutorId.experience > 50 && session.tutorId.experience < 100\n                );\n                break;\n            case '3':\n                filteredSessions = filteredSessions.filter(\n                    session => session.tutorId.experience > 100 && session.tutorId.experience < 200\n                );\n                break;\n            case '4':\n                filteredSessions = filteredSessions.filter(\n                    session => session.tutorId.experience > 200\n                );\n                break;\n            default:\n                filteredSessions = filteredSessions;\n                break;\n        }\n\n        // Filter by language\n        if (language.length !== 0) {\n            filteredSessions = filteredSessions.filter(session =>\n                session.tutorId.languages.some(lang => language.includes(lang))\n            );\n        }\n\n        //Filter by search keyword\n        filteredSessions = filteredSessions.filter(\n            session =>\n                session.description.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n                session.course.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n                session.tutorId.firstName.toLowerCase().includes(searchKeyword.toLowerCase())\n        );\n\n        let allFilteredSessions = filteredSessions;\n\n        // We display 2 offerings per page\n        setNumberOfPages(Math.ceil(allFilteredSessions.length / 2));\n        if (sortValue !== -1) {\n            switch (sortValue) {\n                case '1':\n                    filteredSessions = filteredSessions.sort((a, b) => a.price - b.price);\n                    break;\n                case '2':\n                    filteredSessions = filteredSessions.sort((a, b) => b.price - a.price);\n                    break;\n                case '3':\n                    filteredSessions = filteredSessions.sort(\n                        (a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n                    );\n                    break;\n                case '4':\n                    filteredSessions = filteredSessions.sort((a, b) =>\n                        a.course.name.localeCompare(b.course.name)\n                    );\n                    break;\n                default:\n                    console.error('no available sort option');\n            }\n        }\n        setFilteredSessions(filteredSessions);\n        const startIndex = activePage * 2 - 2;\n        const endIndex = activePage * 2;\n        let clonedArray = filteredSessions.slice();\n        clonedArray = clonedArray.slice(startIndex, endIndex);\n        setDisplayedSessions(clonedArray);\n    };\n\n    const onClickCheckbox = e => {\n        const course = {\n            id: e.target.name,\n            selected: e.target.checked\n        };\n        const index = selectedCourses.findIndex(item => item.id === e.target.name);\n        let currentCourses = selectedCourses;\n        currentCourses[index] = course;\n        setSelectedCourses(currentCourses);\n\n        // Get all courses which are currently selected\n        let filteredCourses = selectedCourses\n            .filter(course => course.selected)\n            .map(course => course.id);\n\n        setFilteredCourses(filteredCourses);\n    };\n\n    const onSort = e => {\n        setSortValue(e.target.value);\n        setActivePage(1);\n        let sortedSessions = filteredSessions;\n        switch (e.target.value) {\n            case '1':\n                sortedSessions = filteredSessions.sort((a, b) => a.price - b.price);\n                break;\n            case '2':\n                sortedSessions = filteredSessions.sort((a, b) => b.price - a.price);\n                break;\n            case '3':\n                sortedSessions = filteredSessions.sort(\n                    (a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n                );\n                break;\n            case '4':\n                sortedSessions = filteredSessions.sort((a, b) =>\n                    a.course.name.localeCompare(b.course.name)\n                );\n                break;\n            default:\n                console.error('no available sort option');\n        }\n\n        setNumberOfPages(Math.ceil(sortedSessions.length / 2));\n        setDisplayedSessions(sortedSessions.slice(0, 2));\n    };\n\n    const onFilterRating = e => {\n        setRating(e.target.value);\n    };\n\n    const onChangeDate = dates => {\n        const [start, end] = dates;\n        setStartDate(start);\n        setEndDate(end);\n    };\n\n    const onChangeExperience = e => {\n        setExperience(e.target.value);\n    };\n\n    const onChangeLanguages = e => {\n        setLanguage(e.map(language => language.value));\n    };\n\n    const handlePageChange = (e, value) => {\n        setActivePage(value);\n    };\n\n    function renderTutorialSessionComponents() {\n        if (!isLoading) {\n            return (\n                <div>\n                    {displayedSessions.map(item => {\n                        return (\n                            <div>\n                                <TutorialSessionComponent\n                                    key={item._id}\n                                    name={item.tutorId.firstName}\n                                    lastOnline={item.tutorId.lastOnline}\n                                    tutor={item.tutorId}\n                                    remote={item.remote}\n                                    onsite={item.onsite}\n                                    price={item.price}\n                                    description={item.description}\n                                    id={item._id}\n                                    name={item.course.name}></TutorialSessionComponent>\n                            </div>\n                        );\n                    })}\n                </div>\n            );\n        } else {\n            return <div></div>;\n        }\n    }\n\n    const classes = useStyles();\n    return (\n        <Row className={classes.component}>\n            <Col xs={3} className={`col ${classes.filterCol}`}>\n                <div className={classes.breadCrumb}>\n                    <Breadcrumb>\n                        <Breadcrumb.Item href=\"http://localhost:3000/home\">Home</Breadcrumb.Item>\n                        <Breadcrumb.Item active>{universityName}</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n                <div className={classes.searchField}>\n                    <SearchField\n                        placeholder=\"Search...\"\n                        onChange={onSearch}\n                        searchText=\"\"\n                        classNames={classes.searchField}\n                    />\n                </div>\n                <div className={classes.card_wrapper}>\n                    <Card className={classes.card}>\n                        <TreeView\n                            defaultCollapseIcon={<ExpandMoreIcon />}\n                            defaultExpandIcon={<ChevronRightIcon />}>\n                            {faculties.map((item, index) => {\n                                return (\n                                    <div classNames={classes.tree_item}>\n                                        <TreeItem\n                                            nodeId={item._id}\n                                            label={item.name}\n                                            classes={{ label: classes.tree_item_label }}>\n                                            <div className={classes.checkbox_wrapper}>\n                                                {item.courses.map((item, index) => {\n                                                    const courseId = item._id;\n                                                    return (\n                                                        <div className={classes.check_box}>\n                                                            <FormControlLabel\n                                                                control={\n                                                                    <Checkbox\n                                                                        checked={\n                                                                            selectedCourses[\n                                                                                courseId\n                                                                            ]\n                                                                        }\n                                                                        name={courseId}\n                                                                        color=\"primary\"\n                                                                        onChange={onClickCheckbox}\n                                                                    />\n                                                                }\n                                                                classes={{\n                                                                    label: classes.check_box_label\n                                                                }}\n                                                                label={item.name}\n                                                            />\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </TreeItem>\n                                    </div>\n                                );\n                            })}\n                        </TreeView>\n                    </Card>\n                </div>\n            </Col>\n            <Col xs={8}>\n                <div>\n                    <Grid container spacing={4}>\n                        <Grid item xs={2}>\n                            <div className={classes.slider_wrapper}>\n                                <Typography id=\"range-slider\" gutterBottom>\n                                    Price range\n                                </Typography>\n                                <Slider\n                                    value={price}\n                                    min={1}\n                                    max={50}\n                                    name=\"price\"\n                                    valueLabelDisplay=\"auto\"\n                                    marks={marks}\n                                    onChange={onChangeSlider}\n                                    aria-labelledby=\"range-slider\"\n                                    getAriaValueText={valuetext}\n                                    className={classes.slider}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <div className={classes.ratingFilter_wrapper}>\n                                <Typography id=\"range-slider\" gutterBottom>\n                                    Rating\n                                </Typography>\n                                <Rating\n                                    name=\"size-large\"\n                                    defaultValue={0}\n                                    value={rating}\n                                    size=\"large\"\n                                    precision={0.5}\n                                    onChange={onFilterRating}\n                                    className={classes.ratingFilter}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Form.Group controlId=\"locationFormSelect\">\n                                <Form.Label>Location</Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    value={location}\n                                    onChange={onChangeLocation}>\n                                    <option value={1}>Both</option>\n                                    <option value={2}>Onsite</option>\n                                    <option value={3}>Remote</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Form.Group controlId=\"locationFormSelect\">\n                                <Form.Label>Language</Form.Label>\n                                <Select\n                                    isMulti\n                                    options={languages}\n                                    placeholder=\"Language\"\n                                    onChange={onChangeLanguages}\n                                />\n                            </Form.Group>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Form.Group controlId=\"locationFormSelect\">\n                                <Form.Label>Minimum Experience</Form.Label>\n                                <Form.Control as=\"select\" onChange={onChangeExperience}>\n                                    <option value={1}>0-50 </option>\n                                    <option value={2}>50-100 </option>\n                                    <option value={3}>100-200 </option>\n                                    <option value={4}>200+</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Typography id=\"range-slider\" gutterBottom>\n                                Available Dates\n                            </Typography>\n                            <div className={classes.datePicker}>\n                                <DatePicker\n                                    placeholderText=\"  Select a date range\"\n                                    selected={startDate}\n                                    onChange={onChangeDate}\n                                    startDate={startDate}\n                                    endDate={endDate}\n                                    selectsRange\n                                    wrapperClassName=\"datePicker\"\n                                />\n                            </div>\n                            <div className={classes.sortSessions}>\n                                <Form.Group>\n                                    <Form.Control as=\"select\" value={sortValue} onChange={onSort}>\n                                        <option value={-1} disabled>\n                                            Sort By\n                                        </option>\n                                        <option value={1}>Price Ascending</option>\n                                        <option value={2}>Price Descending</option>\n                                        <option value={3}>New In</option>\n                                        <option value={4}>Alphabetically</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div>\n                    <Card className={classes.sessionCard}>{renderTutorialSessionComponents()}</Card>\n                    <div className={classes.paginationComponent}>\n                        <Pagination\n                            count={numberOfPages}\n                            page={activePage}\n                            onChange={handlePageChange}\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            size=\"large\"></Pagination>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default ShowTutorialSessions;\n","import axios from 'axios';\nimport { SERVER_API } from '../config';\n\nconst API_URL = `${SERVER_API}/booking`;\n\n/**\n * API Endpoint for getting all booked sessions (bookings) of a user by id\n * @param {String} userId\n * @param {Function} callback\n * @param {Function} errorcallback\n */\nexport async function getAllBookingsByUserId(userId, callback, errorcallback) {\n    try {\n        axios.get(`${API_URL}/student/${userId}`).then(\n            response => {\n                callback(response);\n            },\n            error => {\n                errorcallback(error);\n            }\n        );\n    } catch (error) {\n        errorcallback(error);\n    }\n}\n\n/**\n * API Endpoint for booking a session\n * @param {Object} payload\n * @param {Function} callback\n * @param {Function} errorcallback\n */\nexport function bookSession(payload, callback, errorcallback) {\n    axios\n        .post(`${API_URL}/book-session`, payload)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n\n/**\n * API Controller for rating a booking\n * @param {String} bookingId\n * @param {Object} payload\n * @param {Function} callback\n * @param {Function} errorcallback\n */\nexport function rateBooking(bookingId, payload, callback, errorcallback) {\n    axios\n        .post(`${API_URL}/rate/${bookingId}`, payload)\n        .then(response => {\n            callback(response);\n        })\n        .catch(error => {\n            errorcallback(error);\n        });\n}\n","import React, { Component } from 'react';\nimport { getSessionById } from '../services/SessionService';\nimport { getTutorById } from '../services/TutorService';\nimport AuthService from '../services/AuthService';\nimport { parseJwt } from '../services/AuthHeader';\nimport { Card, Button, Container, Col, Row, Form } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport { BsPersonFill, BsClock, BsGeoAlt } from 'react-icons/bs';\nimport { BiMoney } from 'react-icons/bi';\nimport DatePicker from 'react-datepicker';\nimport { bookSession } from '../services/BookingService';\n\nimport './styles/bookSession.css';\n\nconst defaultState = {\n    id: '',\n    description: '',\n    price: 0,\n    tutorName: '',\n    courseName: '',\n    inquiry: '',\n    remote: false,\n    onsite: false,\n    tutorAvailability: '',\n    studentId: '',\n    tutorId: '',\n    startDate: new Date()\n};\n\nconst styles = () => ({\n    card: {\n        minHeight: '50rem',\n        maxHeight: '60rem',\n        height: '50rem',\n        paddingTop: '2rem',\n        paddingRight: '2rem',\n        paddingLeft: '1rem'\n    },\n    component: {\n        paddingTop: '3rem',\n        paddingLeft: '2rem',\n        paddingRight: '2rem'\n    },\n    vertical: {\n        width: '1px',\n        height: '20px',\n        display: 'inline-block'\n    },\n    column: {\n        paddingTop: '1.5rem',\n        marginLeft: 'auto',\n        paddingLeft: '4rem'\n    },\n    courseTitle: {\n        fontStyle: 'italic'\n    },\n    sessionInfo: {\n        paddingTop: '3rem',\n        paddingRight: '2rem'\n    },\n    sessionDetails: {\n        paddingTop: '3rem'\n    },\n    paddingTop: {\n        paddingTop: '2rem'\n    },\n    textInput: {\n        height: '25rem',\n        width: '50rem'\n    },\n    datepicker: {\n        height: '25rem',\n        width: '25rem'\n    },\n    button_box: {\n        position: 'absolute',\n        right: '3rem',\n        paddingTop: '2rem'\n    },\n    button: {\n        paddingRight: '1rem'\n    }\n});\n\n// components/BookSession.js\nclass BookSession extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n\n    setStartDate = e => {\n        this.setState({\n            startDate: e\n        });\n    };\n\n    componentDidMount() {\n        const sessionId = this.props.match.params.id;\n        const currentUserJWT = AuthService.getCurrentUser();\n\n        const currentUser = parseJwt(currentUserJWT);\n        this.setState({\n            id: sessionId,\n            studentId: currentUser._id\n        });\n        getSessionById(\n            sessionId,\n            response => {\n                const tutorId = response.data.tutorId.id;\n                getTutorById(\n                    tutorId,\n                    tutor => {\n                        this.setState({\n                            tutorId: tutorId,\n                            tutorName: tutor.data.name\n                        });\n                    },\n                    error => {\n                        console.error(error);\n                    }\n                );\n\n                const session = response.data;\n\n                this.setState({\n                    price: session.price,\n                    onsite: session.onsite,\n                    remote: session.remote,\n                    courseName: session.course.name,\n                    description: session.description\n                });\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    onChangeInquiry = e => {\n        this.setState({\n            inquiry: e.target.value\n        });\n    };\n\n    onCancel = e => {\n        this.props.history.goBack();\n    };\n\n    onClick = e => {\n        const data = {\n            sessionId: this.state.id,\n            description: this.state.description,\n            price: this.state.price,\n            inquiry: this.state.inquiry,\n            remote: this.state.remote,\n            onsite: this.state.onsite,\n            startDate: this.state.startDate,\n            courseName: this.state.courseName,\n            studentId: this.state.studentId,\n            tutorId: this.state.tutorId\n        };\n\n        bookSession(\n            data,\n            response => {\n                this.props.history.push('/home');\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.component}>\n                <h3>Book your Session</h3>\n                <div>\n                    <Card className={classes.card}>\n                        <Row>\n                            <Col className={classes.column}>\n                                <h4>Session Details</h4>\n                                <div className={classes.courseTitle}>{this.state.courseName}</div>\n                                <div className={classes.sessionDetails}>\n                                    <div>\n                                        <BsPersonFill className={classes.icon} />\n                                        {` ${this.state.tutorName}`}\n                                    </div>\n                                    <div>\n                                        <BsClock className={classes.icon} /> 60 mins\n                                    </div>\n                                    <div>\n                                        <BsGeoAlt className={classes.icon} /> Remote\n                                    </div>\n                                    <div>\n                                        <BiMoney className={classes.icon} />\n                                        {` ${this.state.price} €/h`}\n                                    </div>\n                                    <div>\n                                        <Form className={classes.paddingTop}>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                name=\"inquiry\"\n                                                placeholder=\"Provide a brief description of your needs for your tutor! (max 200 words)\"\n                                                row={20}\n                                                className={classes.textInput}\n                                                spellCheck={true}\n                                                onChange={this.onChangeInquiry}></Form.Control>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col className={classes.column}>\n                                <h4>{`${this.state.tutorName}'s Availability`}</h4>\n                                <div className={classes.courseTitle}>Select Date & Time</div>\n                                <div className=\"bookSession\">\n                                    <DatePicker\n                                        selected={this.startDate}\n                                        onChange={this.setStartDate}\n                                        inline\n                                        showTimeSelect\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Card>\n                    <div className={classes.button_box}>\n                        {/* Register Button */}\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            active\n                            className={classes.button}\n                            onClick={this.onClick}>\n                            Book Session\n                        </Button>\n\n                        <Button\n                            variant=\"secondary\"\n                            size=\"lg\"\n                            active\n                            className={classes.button}\n                            onClick={this.onCancel}>\n                            Cancel\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(BookSession);\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport { getTutorById } from '../services/TutorService';\nimport ReactStars from 'react-rating-stars-component';\nimport { withRouter } from 'react-router';\nimport { rateBooking } from '../services/BookingService';\nconst styles = () => ({\n    card: {\n        minHeight: '21rem',\n        maxHeight: '21rem',\n        height: '21rem',\n        minWidth: '30rem',\n        maxWidth: '30rem'\n    },\n    headerWrapper: {\n        backgroundColor: '#95bcf2'\n    },\n    header: {\n        fontSize: '18px',\n        textAlign: 'center',\n        paddingTop: '1rem',\n        paddingBottom: '1rem',\n        fontWeight: 500\n    },\n    description: {\n        minHeight: '7rem',\n        maxHeight: '7rem',\n        overFlowY: 'auto',\n        height: '7rem'\n    },\n    date: {\n        paddingLeft: '1rem',\n        minHeight: '1rem',\n        maxHeight: '1rem'\n    },\n    cancelButtonWrapper: {\n        float: 'right',\n        paddingRight: '2rem',\n        position: 'relative',\n        bottom: '-50px',\n        paddingBottom: '0.5rem'\n    },\n    bookAgainButton: {\n        height: '40px',\n        width: '7rem',\n        backgroundColor: '#b6d7a8'\n    },\n    divider: {\n        marginTop: '0.7rem',\n        marginBottom: '0.7rem'\n    },\n    location: {\n        paddingLeft: '1rem'\n    },\n    name: {\n        paddingLeft: '1rem',\n        paddingBottom: '0.5rem'\n    },\n    price: {\n        float: 'right',\n        paddingRight: '1rem',\n        paddingBottom: '0.5rem'\n    },\n    rating: {\n        float: 'right',\n        paddingRight: '1rem',\n        minHeight: '1rem',\n        maxHeight: '1rem',\n        heigth: '1rem'\n    }\n});\n// components/PreviousSessionCard.js\nclass PreviousSessionCard extends Component {\n    constructor(props) {\n        super();\n        this.state = props.session;\n\n        if (!'rating' in props.session) {\n            this.setState({\n                rating: 0\n            });\n        }\n    }\n\n    componentDidMount() {\n        getTutorById(\n            this.state.tutorId,\n            response => {\n                this.setState({\n                    tutorName: response.data.name\n                });\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    onRatingsChanged = e => {\n        const ratingObject = {\n            rating: e\n        };\n        const bookingId = this.state._id;\n        rateBooking(\n            bookingId,\n            ratingObject,\n            response => {\n                console.log(response);\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    };\n\n    onBookAgain = e => {\n        this.props.history.push(`/book-session/${this.state.sessionId}`);\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div>\n                    <Card className={classes.card}>\n                        <div className={classes.headerWrapper}>\n                            <div className={classes.header}>{this.state.courseName}</div>\n                        </div>\n                        <div className={classes.description}>\n                            {this.state.description}\n                            <div className={classes.cancelButtonWrapper}>\n                                <button\n                                    onClick={this.onBookAgain}\n                                    className={classes.bookAgainButton}>\n                                    Book Again\n                                </button>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={classes.date}>{this.state.startDate}</div>\n                        <hr className={classes.divider} />\n                        <div className={classes.location}>\n                            Rating:\n                            <div className={classes.rating}>\n                                <ReactStars\n                                    count={5}\n                                    size={24}\n                                    value={this.state.rating}\n                                    activeColor=\"#ffd700\"\n                                    onChange={this.onRatingsChanged}></ReactStars>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={classes.name}>\n                            Tutor: {` ${this.state.tutorName}`}\n                            <div className={classes.price}>{`Price: ${this.state.price} €/h`}</div>\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(PreviousSessionCard));\n","import React, { Component } from 'react';\nimport { Card, Button, Container, Col, Row, Form } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport { getTutorById } from '../services/TutorService';\nconst styles = () => ({\n    card: {\n        minHeight: '21rem',\n        maxHeight: '21rem',\n        height: '21rem',\n        overFlowY: 'auto'\n    },\n    headerWrapper: {\n        backgroundColor: '#95bcf2'\n    },\n    header: {\n        fontSize: '18px',\n        textAlign: 'center',\n        paddingTop: '1rem',\n        paddingBottom: '1rem',\n        fontWeight: 500\n    },\n    inquiry: {\n        minHeight: '7rem',\n        maxHeight: '7rem',\n        overFlowY: 'auto',\n        height: '7rem'\n    },\n    date: {\n        paddingLeft: '1rem',\n        minHeight: '1rem',\n        maxHeight: '1rem'\n    },\n    cancelButtonWrapper: {\n        float: 'right',\n        paddingRight: '2rem',\n        position: 'relative',\n        bottom: '-70px',\n        paddingBottom: '0.5rem'\n    },\n    cancelButton: {\n        height: '40px',\n        width: '7rem',\n        backgroundColor: '#ea9999'\n    },\n    divider: {\n        marginTop: '0.7rem',\n        marginBottom: '0.7rem'\n    },\n    location: {\n        paddingLeft: '1rem'\n    },\n    name: {\n        paddingLeft: '1rem',\n        paddingBottom: '0.5rem'\n    },\n    price: {\n        float: 'right',\n        paddingRight: '1rem',\n        paddingBottom: '0.5rem'\n    }\n});\n// components/UpcomingSessionCard.js\nclass UpcomingSessionCard extends Component {\n    constructor(props) {\n        super();\n        this.state = props.session;\n    }\n\n    componentDidMount() {\n        getTutorById(\n            this.state.tutorId,\n            response => {\n                this.setState({\n                    tutorName: response.data.name\n                });\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div>\n                    <Card className={classes.card}>\n                        <div className={classes.headerWrapper}>\n                            <div className={classes.header}>{this.state.courseName}</div>\n                        </div>\n                        <div className={classes.inquiry}>\n                            {this.state.inquiry}\n                            <div className={classes.cancelButtonWrapper}>\n                                <button className={classes.cancelButton}>Cancel</button>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={classes.date}>{this.state.startDate}</div>\n                        <hr className={classes.divider} />\n                        <div className={classes.location}>\n                            {this.state.onsite ? 'Onsite' : ''} {this.state.remove ? 'Remote' : ''}\n                        </div>\n                        <hr />\n                        <div className={classes.name}>\n                            {this.state.tutorName}\n                            <div className={classes.price}>{`${this.state.price} €/h`}</div>\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(UpcomingSessionCard);\n","import React, { useEffect, useState, Component } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport AuthService from '../services/AuthService';\nimport { parseJwt } from '../services/AuthHeader';\nimport { getAllBookingsByUserId } from '../services/BookingService';\nimport PreviousSessionCard from './PreviousSessionCard';\nimport UpcomingSessionCard from './UpcomingSessionCard';\nimport { withRouter } from 'react-router';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        paddingLeft: '4rem',\n        paddingRight: '4rem'\n    },\n    card: {\n        paddingTop: '2rem',\n        minHeight: '60rem',\n        maxHeight: '70rem',\n        height: '50rem',\n        minWidth: '145rem',\n        maxWidth: '145rem',\n        width: '145rem'\n    },\n    header: {\n        paddingTop: '2rem'\n    },\n    upcomingSessionHeader: {\n        paddingLeft: '3rem'\n    },\n    previousSessionHeader: {\n        paddingLeft: '3rem'\n    },\n    upcomingSessionRow: {\n        height: '25rem',\n        minHeight: '20rem',\n        maxHeight: '30rem',\n        minWidth: '145rem',\n        maxWidth: '145rem',\n        width: '145rem',\n        overflowX: 'auto'\n    },\n    previousSessionRow: {\n        height: '25rem',\n        minHeight: '20rem',\n        maxHeight: '30rem',\n        minWidth: '145rem',\n        maxWidth: '145rem',\n        width: '145rem',\n        overflowX: 'auto'\n    },\n    sessionColumn: {\n        width: '30rem',\n        minWidth: '30rem',\n        maxWidth: '30rem',\n        paddingLeft: '4rem',\n        paddingTop: '1rem'\n    },\n    sessionColumnWrapper: {\n        paddingLeft: '2rem',\n        paddingRight: '2rem',\n        paddingBottom: '1rem',\n        paddingTop: '1rem'\n    },\n    sessionColumnCard: {\n        height: '25rem',\n        minHeight: '20rem',\n        maxHeight: '30rem',\n        minWidth: '145rem',\n        maxWidth: '145rem',\n        width: '145rem',\n        overflowX: 'auto'\n    }\n}));\n\n// /components/ListUserSessions.js\nconst ListUserSessions = () => {\n    const [userId, setUserId] = useState('');\n    const [previousSessions, setPreviousSessions] = useState([]);\n    const [upcomingSessions, setUpcomingSessions] = useState([]);\n    const [bookings, setBookings] = useState([]);\n\n    useEffect(() => {\n        const currentUserJwt = AuthService.getCurrentUser();\n\n        if (currentUserJwt === null) {\n            return;\n        }\n\n        const currentUser = parseJwt(currentUserJwt);\n        const currentUserId = currentUser._id;\n        setUserId(currentUserId);\n        getAllBookingsByUserId(\n            currentUserId,\n            response => {\n                const currentDate = new Date();\n                const bookings = response.data;\n                const upcomingSessions = bookings.filter(\n                    session => currentDate < new Date(session.startDate)\n                );\n                const previousSessions = bookings.filter(\n                    session => currentDate >= new Date(session.startDate)\n                );\n\n                setPreviousSessions(previousSessions);\n                setUpcomingSessions(upcomingSessions);\n                setBookings(bookings);\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }, []);\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <h3>Manage my Bookings</h3>\n                </div>\n\n                <Card className={classes.card}>\n                    <div className={classes.upcomingSessionHeader}>\n                        <h4>Upcoming Sessions</h4>\n                    </div>\n                    <Row className={classes.upcomingSessionRow}>\n                        {upcomingSessions.map((item, index) => (\n                            <Col className={classes.sessionColumn}>\n                                <UpcomingSessionCard\n                                    value={index}\n                                    session={item}></UpcomingSessionCard>\n                            </Col>\n                        ))}\n                    </Row>\n                    <hr />\n                    <div className={classes.upcomingSessionHeader}>\n                        <h4>Previous Sessions</h4>\n                    </div>\n                    <Row className={classes.previousSessionRow}>\n                        {previousSessions.map((item, index) => (\n                            <div className={classes.sessionColumnWrapper}>\n                                <Col className={classes.sessionColumn}>\n                                    <PreviousSessionCard\n                                        value={index}\n                                        session={item}></PreviousSessionCard>\n                                </Col>\n                            </div>\n                        ))}\n                    </Row>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(ListUserSessions);\n","import CreateCourse from './components/CreateCourse';\nimport RegisterUser from './components/RegisterUser';\nimport HomeScreen from './components/HomeScreen';\nimport CreateUniversity from './components/CreateUniversity';\nimport CreateFaculty from './components/CreateFaculty';\nimport CreateTutorialSession from './components/CreateTutorialSession';\nimport LoginUser from './components/LoginUser';\nimport ShowTutorialSessions from './components/ShowTutorialSessions';\nimport BookSession from './components/BookSession';\nimport ListUserSessions from './components/ListUserSessions';\nconst routes = [\n    {\n        path: '/home',\n        component: HomeScreen\n    },\n    {\n        path: '/login-user',\n        component: LoginUser\n    },\n    {\n        path: '/register-user',\n        component: RegisterUser\n    },\n    {\n        path: '/create-course',\n        component: CreateCourse,\n        permission: 'tutor'\n    },\n    {\n        path: '/create-university',\n        component: CreateUniversity,\n        permission: 'admin'\n    },\n    {\n        path: '/create-faculty',\n        component: CreateFaculty,\n        permission: 'admin'\n    },\n    {\n        path: '/create-tutorial-session',\n        component: CreateTutorialSession,\n        permission: 'tutor'\n    },\n    {\n        path: '/show-sessions',\n        component: ShowTutorialSessions\n    },\n    {\n        path: '/book-session/:id',\n        component: BookSession\n    },\n    {\n        path: '/list-user-sessions',\n        component: ListUserSessions\n    }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport NavigationBar from './components/NavigationBar';\nimport AdminRoute from './components/routes/AdminRoute';\nimport TutorRoute from './components/routes/TutorRoute';\nimport PrivateRoute from './components/routes/PrivateRoute';\n\nimport routes from './routes';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar></NavigationBar>\n                <Router>\n                    <div>\n                        {routes.map((item, i) => {\n                            {\n                                if (item.permission === 'admin') {\n                                    return (\n                                        <AdminRoute\n                                            key={i}\n                                            path={item.path}\n                                            component={item.component}\n                                        />\n                                    );\n                                } else if (item.permission === 'tutor') {\n                                    return (\n                                        <TutorRoute\n                                            key={i}\n                                            path={item.path}\n                                            component={item.component}\n                                        />\n                                    );\n                                } else if (item.permission === 'private') {\n                                    return (\n                                        <PrivateRoute\n                                            key={i}\n                                            path={item.path}\n                                            component={item.component}\n                                        />\n                                    );\n                                } else {\n                                    return (\n                                        <Route\n                                            key={i}\n                                            path={item.path}\n                                            component={item.component}\n                                        />\n                                    );\n                                }\n                            }\n                        })}\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}