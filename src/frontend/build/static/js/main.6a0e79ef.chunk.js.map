{"version":3,"sources":["components/CreateCourse.js","components/RegisterUser.js","components/HomeScreen.js","components/CreateUniversity.js","components/CreateFaculty.js","services/AuthHeader.js","services/AuthService.js","components/CreateOffering.js","assets/graduation.png","components/NavigationBar.js","components/LoginUser.js","components/AdminRoute.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","name","university","faculty","availableUniversities","availableFaculties","errors","SERVER_URL","CreateCourse","onChange","e","setState","target","value","onCancel","preventDefault","props","history","push","onChangeUniversity","universityId","axios","get","then","response","facultiesSorted","data","faculties","sort","a","b","localeCompare","forEach","item","id","_id","length","catch","error","console","log","onSubmit","validateInput","state","post","res","universitiesSorted","availableFacultiesSorted","this","classes","className","component","padding_top","padding_card","Card","card","Form","form","Group","Label","Control","as","map","_","Text","controlId","type","rows","button_box","Button","variant","size","active","button","onClick","Component","withStyles","position","paddingTop","backgroundColor","paddingBottom","minHeight","color","fontSize","paddingRight","paddingLeft","firstName","lastName","password","confirmPassword","gender","semester","program","dateOfBirth","Date","lastOnline","role","email","semesterCount","degree","bachelor","master","graduate","roles","student","tutor","admin","RegisterUser","onChangeNumber","number","Number","onRegister","input","isValid","test","optionState","container","title_padding_bottom","row_padding_top","class","htmlFor","placeholder","row__padding_right","values","label__padding_top","Object","keys","width","height","button_padding_right","HomeScreen","href","button__padding_top","theme","CreateUniversity","universities","createFaculty","top_padding","parseJwt","token","base64","split","replace","JSON","parse","window","atob","API_URL","localStorage","setItem","stringify","removeItem","user","getItem","isLoggedIn","currentUserToken","getCurrentUser","currentUser","course","wage","remote","onsite","description","tutorId","date","duration","availableCourses","labels","CreateOffering","onChangeDate","onClickCheckmark","checked","coursesSorted","onChangeFaculty","facultyId","AuthService","currentUserId","title","Row","form_label","vl","form_selectors","form_option","file_selector","File","date_picker","selected","showTimeSelect","dateFormat","numeric_input","min","max","description_area","checkmarks_left","Check","label","fontWeight","left","borderLeft","marginLeft","right","NavigationBar","logout","Navbar","bg","src","graduationIcon","logo","Brand","bar","Nav","listButton","calendarButton","profileButton","NavDropdown","profileButton__span","Item","Divider","top","zIndex","LoginUser","handleLogin","bind","onChangeEmail","onChangePassword","loading","message","checkBtn","context","_errors","login","result","resMessage","toString","login_form","ref","c","padding_button_top","disabled","style","display","register_button","PrivateRoute","rest","isAdmin","render","to","pathname","from","location","App","path","exact","AdminRoute","CreateFaculty","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a0e79ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, Card } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport '../App.css';\nimport axios from 'axios';\n\nconst styles = () => ({\n    button_box: {\n        position: 'relative',\n        paddingTop: '2rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    card: {\n        color: 'black',\n        minHeight: '30vh',\n        fontSize: 'large'\n    },\n    padding_card: {\n        paddingTop: '1rem'\n    },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '1rem'\n    },\n    padding_top: {\n        paddingTop: '2rem'\n    }\n});\n\nconst defaultState = {\n    name: '',\n    university: '',\n    faculty: '',\n    availableUniversities: [],\n    availableFaculties: [],\n    errors: []\n};\n\nconst SERVER_URL = 'http://localhost:8082/api';\n\n// /components/CreateCourse.js\nclass CreateCourse extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n\n    componentDidMount() {\n        axios\n\n            // Get all the available universities to render the available options\n            .get(`${SERVER_URL}/university`)\n            .then(response => {\n                // Sort order of universities alphabetically\n                const universitiesSorted = response.data.sort((a, b) =>\n                    a.name.localeCompare(b.name)\n                );\n\n                this.setState({\n                    availableUniversities: universitiesSorted\n                });\n\n                if (universitiesSorted.length > 0 && universitiesSorted[0].faculties.length > 0) {\n                    const availableFacultiesSorted = universitiesSorted[0].faculties.sort((a, b) =>\n                        a.name.localeCompare(b.name)\n                    );\n\n                    this.setState({\n                        university: universitiesSorted[0]._id,\n                        availableFaculties: availableFacultiesSorted,\n                        faculty: availableFacultiesSorted[0]._id\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({ errors: [] });\n    };\n\n    onCancel = e => {\n        e.preventDefault();\n        this.props.history.push('');\n    };\n\n    // Refactor this to use university service\n    onChangeUniversity = e => {\n        const universityId = e.target.value;\n        this.setState({ [e.target.name]: universityId });\n\n        axios\n            // Get all the available universities to render the available options\n            .get(`${SERVER_URL}/university/${e.target.value}`)\n            .then(response => {\n                let facultiesSorted = [];\n\n                // Sort all universities by their name alphabetically\n                response.data.faculties\n                    .sort((a, b) => a.name.localeCompare(b.name))\n                    .forEach(item => {\n                        facultiesSorted.push({\n                            id: item._id,\n                            name: item.name\n                        });\n                    });\n\n                // Set the selected university to the first displayed university\n                if (facultiesSorted.length > 0) {\n                    this.setState({\n                        faculty: facultiesSorted[0].id,\n                        availableFaculties: facultiesSorted\n                    });\n                } else {\n                    this.setState({\n                        faculty: '',\n                        availableFaculties: []\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    validateInput() {\n        let input = this.state.name;\n        let errors = [];\n        if (input === '') {\n            errors['name'] = 'Please enter a course name!';\n            this.setState({\n                errors: errors\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                name: this.state.name,\n                university: this.state.university,\n                faculty: this.state.faculty\n            };\n\n            axios\n                .post(`${SERVER_URL}/course`, data)\n                .then(res => {\n                    this.setState(defaultState);\n                    this.props.history.push('/');\n                })\n                .catch(error => {\n                    console.log('Error in Create course');\n                });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.component}>\n                    <div className={`container ${classes.padding_top}`}>\n                        <h2>Create Course</h2>\n                        <div className={`${classes.padding_card}`}>\n                            <Card className={classes.card}>\n                                <Form onSubmit={this.onSubmit} className={classes.form}>\n                                    <Form.Group>\n                                        <Form.Label>University</Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"university\"\n                                            onChange={this.onChangeUniversity}>\n                                            {this.state.availableUniversities.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                        <Form.Text className=\"text-muted\">\n                                            Select the University of the course which you would like\n                                            to create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Faculty</Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"faculty\"\n                                            onChange={this.onChange}>\n                                            {this.state.availableFaculties.map((item, _) => (\n                                                <option value={item.id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                        <Form.Text className=\"text-muted\">\n                                            Select the Faculty of the course which you would like to\n                                            create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formCreateCourseName\">\n                                        <Form.Label>Course Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={this.onChange}\n                                            rows={1}\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                            Enter the course name which you would like to create!\n                                        </Form.Text>\n                                        <div className=\"text-danger\">{this.state.errors.name}</div>\n                                    </Form.Group>\n                                    <div className={classes.button_box}>\n                                        {/* Register Button */}\n                                        <Button\n                                            variant=\"primary\"\n                                            size=\"lg\"\n                                            active\n                                            className={classes.button}\n                                            onClick={this.onSubmit}>\n                                            Register\n                                        </Button>\n\n                                        {/* Cancel Button */}\n                                        <Button\n                                            variant=\"secondary\"\n                                            size=\"lg\"\n                                            active\n                                            className={classes.button}\n                                            onClick={this.onCancel}>\n                                            Cancel\n                                        </Button>\n                                    </div>\n                                </Form>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(CreateCourse);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/styles';\nimport Form from 'react-bootstrap/Form';\n\nconst styles = () => ({\n    container: {\n        paddingTop: '2rem',\n        paddingBottom: '10px'\n    },\n    row__padding_right: {\n        paddingRight: '20px'\n    },\n    label__padding_top: {\n        paddingTop: '10px'\n    },\n    button_box: {\n        position: 'absolute',\n        paddingTop: '2rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '90vh',\n        color: 'black'\n    },\n    button: {\n        width: '10rem',\n        height: '3rem'\n    },\n    button_padding_right: {\n        paddingRight: '20px'\n    },\n    row_padding_top: {\n        paddingTop: '1rem'\n    },\n    title_padding_bottom: {\n        paddingBottom: '1rem'\n    }\n});\n\nconst defaultState = {\n    firstName: '',\n    lastName: '',\n    password: '',\n    confirmPassword: '',\n    gender: 'male',\n    semester: 1,\n    program: 'bachelor',\n    dateOfBirth: new Date(),\n    lastOnline: new Date(),\n    role: 'student',\n    email: '',\n    errors: {}\n};\n\nconst semesterCount = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst degree = [\n    {\n        bachelor: 'Bachelor'\n    },\n    {\n        master: 'Master'\n    },\n    {\n        graduate: 'Graduate'\n    }\n];\nconst roles = [\n    {\n        student: 'Student'\n    },\n    {\n        tutor: 'Tutor'\n    },\n    {\n        admin: 'Admin'\n    }\n];\n\nconst SERVER_URL = 'http://localhost:8082/api';\n\n// /components/RegisterUser.js\nclass RegisterUser extends Component {\n    constructor() {\n        super();\n\n        this.state = defaultState;\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    onChangeNumber = e => {\n        const number = Number(e.target.value);\n        this.setState({ [e.target.name]: number });\n    };\n\n    onCancel = e => {\n        e.preventDefault();\n        this.props.history.push('');\n    };\n\n    onRegister = e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                email: this.state.email,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                password: this.state.password,\n                gender: this.state.gender,\n                semester: this.state.semester,\n                program: this.state.program,\n                dateOfBirth: this.state.dateOfBirth,\n                lastOnline: this.state.lastOnline,\n                role: this.state.role\n            };\n\n            axios\n                .post(`${SERVER_URL}/user/register`, data)\n                .then(res => {\n                    this.setState(defaultState);\n                    this.props.history.push('/');\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    };\n\n    /**\n     * Validates wether all user inputs are in the correct format/filled out\n     * @returns {Boolean} true if all required fields are filled out.\n     */\n    validateInput() {\n        let input = this.state;\n        let errors = {};\n        let isValid = true;\n\n        if (input['firstName'] === '') {\n            isValid = false;\n            errors['firstName'] = 'Please enter your first name!';\n        }\n        if (input['lastName'] === '') {\n            isValid = false;\n            errors['lastName'] = 'Please enter your last name!';\n        }\n\n        if (input['email'] !== '') {\n            const regExp =\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (!regExp.test(input['email'])) {\n                isValid = false;\n                errors['email'] = 'Please enter a valid email adress!';\n            }\n        } else if (input['email'] === '') {\n            isValid = false;\n            errors['email'] = 'Please enter an email adress!';\n        }\n\n        if (input['password'] === '') {\n            isValid = false;\n            errors['password'] = 'Please enter a password!';\n        }\n\n        if (input['confirmPassword'] === '') {\n            isValid = false;\n            errors['confirmPassword'] = 'Please enter your password confirmation';\n        }\n\n        if (input['password'] !== '' && input['confirmPassword'] !== '') {\n            if (input['password'] !== input['confirmPassword']) {\n                errors['password'] = \"Your passwords don't match\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n\n        return isValid;\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        var optionState = this.props.optionState;\n        return (\n            <div className={classes.component}>\n                <div className=\"container\">\n                    <div className={classes.container}>\n                        <h2 className={`${classes.title_padding_bottom}`}>Register User</h2>\n                        <div className={`card col-12 login-card mt-2 hv-center`}>\n                            <form>\n                                <div className={classes.row_padding_top}>\n                                    <div class=\"row row-cols-3\">\n                                        {/* First name input */}\n                                        <div class=\"col\">\n                                            <label htmlFor=\"firstNameInput\">First Name</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"firstName\"\n                                                className=\"form-control\"\n                                                id=\"firstName\"\n                                                placeholder=\"Max\"\n                                                value={this.state.firstName}\n                                                onChange={this.onChange}\n                                            />\n                                            <div className=\"text-danger\">\n                                                {this.state.errors.firstName}\n                                            </div>\n                                        </div>\n\n                                        {/* First name input */}\n                                        <div class=\"col\">\n                                            <label htmlFor=\"lastNameInput\">Last Name</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"lastName\"\n                                                className=\"form-control\"\n                                                id=\"lastName\"\n                                                placeholder=\"Mustermann\"\n                                                value={this.state.lastName}\n                                                onChange={this.onChange}\n                                            />\n                                            <div className=\"text-danger\">\n                                                {this.state.errors.lastName}\n                                            </div>\n                                        </div>\n\n                                        {/* Gender input control */}\n                                        <div>\n                                            <Form.Group\n                                                controlId=\"gender\"\n                                                className={classes.row__padding_right}>\n                                                <Form.Label>Gender</Form.Label>\n                                                <Form.Control\n                                                    name=\"gender\"\n                                                    as=\"select\"\n                                                    onChange={this.onChange}>\n                                                    <option values=\"male\">Male</option>\n                                                    <option values=\"female\">Female</option>\n                                                    <option>Undefined</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* Email input */}\n                                <div className={classes.label__padding_top}>\n                                    <label htmlFor=\"exampleInputEmail\">Email address</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        id=\"email\"\n                                        placeholder=\"mail@example.com\"\n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                    />\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </small>\n                                    <div className=\"text-danger\">{this.state.errors.email}</div>\n                                </div>\n\n                                {/* Password input */}\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        placeholder=\"Password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    <div className=\"text-danger\">{this.state.errors.password}</div>\n                                </div>\n\n                                {/* Confirm password input */}\n                                <div className=\"form-group text-left\">\n                                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                                    <input\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        className=\"form-control\"\n                                        id=\"confirmPassword\"\n                                        placeholder=\"Confirm Password\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    <div className=\"text-danger\">\n                                        {this.state.errors.confirmPassword}\n                                    </div>\n                                </div>\n\n                                <div class={classes.container + ' ' + 'row row-cols-4'}>\n                                    {/* University input option */}\n                                    <div class=\"col\">\n                                        <Form.Group controlId=\"university\">\n                                            <Form.Label>University</Form.Label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                name=\"university\"\n                                                onChange={this.onChange}>\n                                                <option values={'tum'}>\n                                                    Technical University Munich\n                                                </option>\n                                                <option values={'lmu'}>\n                                                    Ludwig Maximilian University Munich\n                                                </option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n\n                                    {/* Program input option */}\n                                    <div class=\"col\">\n                                        <Form.Group controlId=\"degree\" onChange={this.onChange}>\n                                            <Form.Label>Program</Form.Label>\n                                            <Form.Control name=\"program\" as=\"select\">\n                                                {degree.map((item, _) => (\n                                                    <option value={Object.keys(item)[0]}>\n                                                        {Object.values(item)[0]}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n\n                                    {/* Semester input option */}\n                                    <div class=\"col\">\n                                        <Form.Group\n                                            controlId=\"semester\"\n                                            onChange={this.onChangeNumber}>\n                                            <Form.Label>Semester</Form.Label>\n                                            <Form.Control\n                                                name=\"semester\"\n                                                as=\"select\"\n                                                value={this.state.value}>\n                                                {semesterCount.map((item, _) => (\n                                                    <option value={item}>{item}</option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n\n                                    {/* User role input option */}\n                                    <div class=\"col\">\n                                        <Form.Group controlId=\"role\">\n                                            <Form.Label>Role</Form.Label>\n                                            <Form.Control\n                                                name=\"role\"\n                                                as=\"select\"\n                                                value={optionState}\n                                                onChange={this.onChange}\n                                                value={this.state.role}>\n                                                {roles.map((item, _) => (\n                                                    <option value={Object.keys(item)[0]}>\n                                                        {Object.values(item)[0]}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </div>\n                                </div>\n\n                                <div className={classes.button_box}>\n                                    {/* Register Button */}\n                                    <div className=\"form-group\">\n                                        <button\n                                            className={`btn btn-primary btn-lg`}\n                                            onClick={this.onRegister}>\n                                            Register\n                                        </button>\n                                        <button\n                                            className={`btn btn-primary btn-secondary btn-lg`}\n                                            onClick={this.onCancel}>\n                                            Cancel\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(RegisterUser);\n","import { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n    button__padding_top: {\n        paddingTop: '20px'\n    }\n});\nclass HomeScreen extends Component {\n    onClick() {}\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div>Homescreen currently to access the different routes:</div>\n\n                <div>\n                    <button>\n                        <a href=\"/register-user\" className={classes.button__padding_top}>\n                            Register User\n                        </a>\n                    </button>\n                    <button>\n                        <a href=\"/show-offerings\" className={classes.button__padding_top}>\n                            Show Offerings\n                        </a>\n                    </button>\n                    <button>\n                        <a href=\"create-offering\" className={classes.button__padding_top}>\n                            Create Offering\n                        </a>\n                    </button>\n                    <button>\n                        <a href=\"/login-user\" className={classes.button__padding_top}>\n                            Login User\n                        </a>\n                    </button>\n                    <button onClick={this.onClick}>Test Button</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(HomeScreen);\n","import React, { Component } from 'react';\nimport { Form, Card } from 'react-bootstrap';\nimport axios from 'axios';\n\nimport { withStyles } from '@material-ui/styles';\n\nconst defaultState = {\n    name: '',\n    errors: {}\n};\n\nconst styles = () => ({\n    button_box: {\n        position: 'absolute',\n        paddingTop: '2rem',\n        paddingLeft: '1rem'\n    },\n    padding_top: {\n        paddingTop: '2rem'\n    },\n    padding_card: {\n        paddingTop: '1rem'\n    },\n    card: {\n        color: 'black',\n        minHeight: '18vh',\n        fontSize: 'large'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '1rem'\n    }\n});\n\nconst SERVER_URL = 'http://localhost:8082/api';\n\n// /components/CreateUniversity.js\nclass CreateUniversity extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({ errors: [] });\n    };\n\n    onCancel = e => {\n        this.props.history.push('/');\n    };\n\n    validateInput() {\n        let input = this.state.name;\n        let errors = [];\n        if (input === '') {\n            errors['name'] = 'Please enter a university name!';\n            this.setState({\n                errors: errors\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                name: this.state.name\n            };\n\n            axios\n                .post(`${SERVER_URL}/university`, data)\n                .then(res => {\n                    this.setState(defaultState);\n                    this.props.history.push('/');\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.component}>\n                    <div className={`container ${classes.padding_top}`}>\n                        <h2>Create University</h2>\n                        <div className={`${classes.padding_card}`}>\n                            <Card className={classes.card}>\n                                <Form onSubmit={this.onSubmit} className={classes.form}>\n                                    <Form.Group>\n                                        <Form.Label>University Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={this.onChange}\n                                            rows={1}></Form.Control>\n                                        <div className=\"text-danger\">{this.state.errors.name}</div>\n                                        <Form.Text className=\"text-muted\">\n                                            Enter the university name which you would like to\n                                            create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form>\n                            </Card>\n                        </div>\n                        <div className={classes.button_box}>\n                            {/* Register Button */}\n                            <div className=\"form-group\">\n                                <button\n                                    className={`btn btn-primary btn-lg`}\n                                    onClick={this.onSubmit}>\n                                    Create\n                                </button>\n                                <button\n                                    className={`btn btn-primary btn-secondary btn-lg`}\n                                    onClick={this.onCancel}>\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(CreateUniversity);\n","import React, { Component } from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/styles';\n\nconst defaultState = {\n    name: '',\n    university: '',\n    universities: [],\n    errors: []\n};\n\nconst styles = () => ({\n    button_box: {\n        position: 'relative',\n        paddingTop: '1rem'\n    },\n    top_padding: {\n        paddingTop: '2rem'\n    },\n    padding_card: {\n        paddingTop: '1rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    card: {\n        color: 'black',\n        minHeight: '25vh',\n        fontSize: 'large'\n    },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '2rem',\n        paddingBottom: '1rem'\n    }\n});\n\nconst SERVER_URL = 'http://localhost:8082/api';\n\n// /components/CreateFaculty.js\nclass createFaculty extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n\n    componentDidMount() {\n        axios\n\n            // Get all the available universities to render the available options\n            .get(`${SERVER_URL}/university`)\n            .then(response => {\n                const universitiesSorted = response.data.sort((a, b) =>\n                    a.name.localeCompare(b.name)\n                );\n\n                this.setState({\n                    universities: universitiesSorted\n                });\n\n                if (universitiesSorted.length > 0) {\n                    this.setState({\n                        university: universitiesSorted[0]._id\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    validateInput() {\n        let input = this.state.name;\n        let errors = [];\n        if (input === '') {\n            errors['name'] = 'Please enter a faculty name!';\n            this.setState({\n                errors: errors\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({ errors: [] });\n    };\n\n    onCancel = e => {\n        this.props.history.push('/');\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (this.validateInput()) {\n            const data = {\n                name: this.state.name,\n                university: this.state.university\n            };\n\n            axios\n                .post(`${SERVER_URL}/faculty`, data)\n                .then(res => {\n                    this.setState(defaultState);\n                    this.props.history.push('/');\n                })\n                .catch(error => {\n                    console.log('Error in create faculty');\n                });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.component}>\n                    <div className={`container ${classes.top_padding}`}>\n                        <h2>Create Faculty</h2>\n                        <div className={`${classes.padding_card}`}>\n                            <Card className={classes.card}>\n                                <Form onSubmit={this.onSubmit} className={classes.form}>\n                                    <Form.Group>\n                                        <Form.Label>University</Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"university\"\n                                            onChange={this.onChange}>\n                                            {this.state.universities.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                        <Form.Text className=\"text-muted\">\n                                            Select the university of the faculty which you would\n                                            like to create!\n                                        </Form.Text>\n                                    </Form.Group>\n\n                                    {/* Faculty Name input */}\n                                    <Form.Group>\n                                        <Form.Label>Faculty Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            value={this.state.name}\n                                            onChange={this.onChange}\n                                            rows={1}></Form.Control>\n                                        <div className=\"text-danger\">{this.state.errors.name}</div>\n                                        <Form.Text className=\"text-muted\">\n                                            Enter the faculty name which you would like to create!\n                                        </Form.Text>\n                                    </Form.Group>\n                                    <div className={classes.button_box}>\n                                        {/* Create Button */}\n                                        <Button\n                                            variant=\"primary\"\n                                            size=\"lg\"\n                                            active\n                                            className={classes.button}\n                                            onClick={this.onSubmit}>\n                                            Create\n                                        </Button>\n\n                                        {/* Cancel Button */}\n                                        <Button\n                                            variant=\"secondary\"\n                                            size=\"lg\"\n                                            active\n                                            className={classes.button}\n                                            onClick={this.onCancel}>\n                                            Cancel\n                                        </Button>\n                                    </div>\n                                </Form>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(createFaculty);\n","export const authHeader = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return { 'x-access-token': user.accessToken };\n    } else {\n        return {};\n    }\n};\n\nexport const parseJwt = token => {\n    if (!token) {\n        return;\n    }\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace('-', '+').replace('_', '/');\n    return JSON.parse(window.atob(base64));\n};\n\nexport default {\n    authHeader,\n    parseJwt\n};\n","import axios from 'axios';\nimport { parseJwt } from './AuthHeader';\nconst API_URL = 'http://localhost:8082/api/user';\n\nclass AuthService {\n    login(email, password) {\n        return axios\n            .post(`${API_URL}/login`, {\n                email,\n                password\n            })\n            .then(response => {\n                if (response.data.token) {\n                    localStorage.setItem('user', JSON.stringify(response.data.token));\n                }\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    register(user) {\n        return axios.post(`${API_URL}/register`, user);\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    isLoggedIn() {\n        return localStorage.getItem('user') !== null;\n    }\n\n    isAdmin() {\n        if (this.isLoggedIn()) {\n            const currentUserToken = this.getCurrentUser();\n            const currentUser = parseJwt(currentUserToken);\n            return currentUser.role === 'admin';\n        }\n        return false;\n    }\n\n    isTutor() {\n        if (this.isLoggedIn()) {\n            const currentUserToken = this.getCurrentUser();\n            const currentUser = parseJwt(currentUserToken);\n            return currentUser.role === 'tutor' || currentUser.role === 'admin';\n        }\n        return false;\n    }\n}\n\nexport default new AuthService();\n","import React, { Component } from 'react';\nimport { Button, Form, Card, Row } from 'react-bootstrap';\nimport { withStyles } from '@material-ui/styles';\nimport '../App.css';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport NumericInput from 'react-numeric-input';\nimport { parseJwt } from '../services/AuthHeader';\nimport AuthService from '../services/AuthService';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// @todo: Refactor api calls to faculty/university service\nconst styles = () => ({\n    title: {\n        position: 'relative',\n        paddingTop: '4rem',\n        paddingBottom: '1rem',\n        fontWeight: 'bold',\n        left: '-18rem'\n    },\n    component: {\n        position: 'relative',\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '100vh',\n        color: 'black'\n    },\n    card: {\n        position: 'absolute',\n        paddingTop: '1rem',\n        left: '400px',\n        width: '90rem',\n        height: '55rem'\n    },\n    vl: {\n        borderLeft: '1px solid #dfdfdf',\n        height: '52rem',\n        position: 'relative',\n        left: '50%',\n        marginLeft: '-3px',\n        paddingTop: '10px'\n    },\n    form_option: {\n        paddingTop: '1.1rem',\n        paddingLeft: '20px',\n        width: '20rem'\n    },\n    form_label: {\n        paddingTop: '2.2rem',\n        paddingLeft: '50px',\n        fontSize: '17px'\n    },\n    file_selector: {\n        paddingTop: '1.12rem',\n        paddingLeft: '20px',\n        width: '20rem'\n    },\n    form_selectors: {\n        paddingTop: '8px',\n        paddingLeft: '5rem'\n    },\n    date_picker: {\n        paddingLeft: '20px',\n        width: '20rem',\n        paddingTop: '1.1rem'\n    },\n    numeric_input: {\n        paddingTop: '2.2rem',\n        paddingLeft: '20px'\n    },\n    checkmarks_left: {\n        paddingTop: '2.2rem',\n        paddingLeft: '20px'\n    },\n    description_area: {\n        width: '40rem'\n    },\n    padding_top: {\n        paddingTop: '1rem'\n    },\n    button_box: {\n        position: 'absolute',\n        right: '1rem',\n        paddingTop: '5rem'\n    },\n    button: {\n        width: '10rem',\n        height: '3rem'\n    }\n});\n\nconst defaultState = {\n    university: '',\n    faculty: '',\n    course: '',\n    wage: 1,\n    remote: false,\n    onsite: false,\n    description: '',\n    tutorId: '',\n    date: new Date(),\n    duration: 30,\n    availableUniversities: [],\n    availableFaculties: [],\n    availableCourses: []\n};\n\nconst labels = [\n    'Choose the University of your Course',\n    'Choose the Faculty of your Course',\n    'Choose the Course that you are offering',\n    'Upload CV',\n    'Upload relevant course transcripts',\n    'Dates/Time offered',\n    'Enter your hourly wage (€/h)',\n    'Description'\n];\nconst SERVER_URL = 'http://localhost:8082/api';\n\n// /components/CreateOferring.js\nclass CreateOffering extends Component {\n    constructor() {\n        super();\n        this.state = defaultState;\n    }\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    onChangeDate = e => {\n        this.setState({\n            date: Date.parse(e)\n        });\n    };\n\n    onClickCheckmark = e => {\n        this.setState({ [e.target.name]: e.target.checked });\n    };\n\n    onClick = e => {\n        console.log(this.state);\n    };\n\n    // Refactor this to use university service\n    onChangeUniversity = e => {\n        const universityId = e.target.value;\n        this.setState({ [e.target.name]: universityId });\n\n        axios\n            // Get all the available universities to render the available options\n            .get(`${SERVER_URL}/university/${e.target.value}`)\n            .then(response => {\n                let facultiesSorted = [];\n\n                // Sort all universities by their name alphabetically\n                response.data.faculties\n                    .sort((a, b) => a.name.localeCompare(b.name))\n                    .forEach(item => {\n                        facultiesSorted.push({\n                            _id: item._id,\n                            name: item.name\n                        });\n                    });\n\n                // Set the selected university to the first displayed university\n                if (facultiesSorted.length > 0) {\n                    this.setState({\n                        faculty: facultiesSorted[0]._id,\n                        availableFaculties: facultiesSorted\n                    });\n\n                    axios\n                        .get(`${SERVER_URL}/faculty/courses/${facultiesSorted[0]._id}`)\n                        .then(response => {\n                            let coursesSorted = [];\n\n                            response.data\n                                .sort((a, b) => a.name.localeCompare(b.name))\n                                .forEach(item => {\n                                    coursesSorted.push({ _id: item._id, name: item.name });\n                                });\n\n                            if (coursesSorted.length > 0) {\n                                this.setState({\n                                    course: coursesSorted[0]._id,\n                                    availableCourses: coursesSorted\n                                });\n                            } else {\n                                this.setState({\n                                    course: '',\n                                    availableCourses: []\n                                });\n                            }\n                        })\n                        .catch(error => {\n                            console.log(error);\n                        });\n                } else {\n                    this.setState({\n                        faculty: '',\n                        availableFaculties: [],\n                        course: '',\n                        availableCourses: []\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    onChangeFaculty = e => {\n        const facultyId = e.target.value;\n        axios\n            .get(`${SERVER_URL}/faculty/courses/${facultyId}`)\n            .then(response => {\n                let coursesSorted = [];\n\n                response.data\n                    .sort((a, b) => a.name.localeCompare(b.name))\n                    .forEach(item => {\n                        coursesSorted.push({ _id: item._id, name: item.name });\n                    });\n\n                if (coursesSorted.length > 0) {\n                    this.setState({\n                        course: coursesSorted[0]._id,\n                        availableCourses: coursesSorted\n                    });\n                } else {\n                    this.setState({\n                        course: '',\n                        availableCourses: []\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    validateInput() {\n        let input = this.state;\n        if (input['university'] === '' || input['faculty'] === '' || input['course'] === '') {\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        // Set the tutor id to the user which is currently logged in\n        const currentUserToken = AuthService.getCurrentUser();\n        const currentUserId = parseJwt(currentUserToken)._id;\n        this.setState({ tutorId: currentUserId });\n\n        axios\n\n            // Get all the available universities to render the available options\n            .get(`${SERVER_URL}/university`)\n            .then(response => {\n                // Sort order of universities alphabetically\n                const universitiesSorted = response.data.sort((a, b) =>\n                    a.name.localeCompare(b.name)\n                );\n\n                this.setState({\n                    availableUniversities: universitiesSorted\n                });\n\n                if (universitiesSorted.length > 0 && universitiesSorted[0].faculties.length > 0) {\n                    const availableFacultiesSorted = universitiesSorted[0].faculties.sort((a, b) =>\n                        a.name.localeCompare(b.name)\n                    );\n\n                    this.setState({\n                        university: universitiesSorted[0]._id,\n                        availableFaculties: availableFacultiesSorted,\n                        faculty: availableFacultiesSorted[0]._id\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.component}>\n                <div className={`container ${classes.padding_top}`}>\n                    <h2 className={`${classes.title}`}>Offer Course</h2>\n                    <Card className={classes.card}>\n                        <Form>\n                            <Row>\n                                {/** First Column with labels describin the right input */}\n                                <div className=\"col-sm-4\">\n                                    {labels.map((item, _) => (\n                                        <div>\n                                            <Form.Label className={classes.form_label}>\n                                                {item}\n                                            </Form.Label>\n                                        </div>\n                                    ))}\n                                </div>\n\n                                {/** Vertical Separator */}\n                                <div className=\"col-sm-0\">\n                                    <div className={classes.vl}></div>\n                                </div>\n                                <div className={`${classes.form_selectors} col-sm-3`}>\n                                    {/** Form for selecting the unversity*/}\n                                    <Form.Group\n                                        controlId=\"universityGroup\"\n                                        className={classes.form_option}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"university\"\n                                            onChange={this.onChangeUniversity}>\n                                            {this.state.availableUniversities.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    {/** Form for selecting the corresponding faculty*/}\n                                    <Form.Group\n                                        controlId=\"universityGroup\"\n                                        className={classes.form_option}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"faculty\"\n                                            onChange={this.onChangeFaculty}>\n                                            {this.state.availableFaculties.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    {/** Form for selecting the corresponding course*/}\n                                    <Form.Group\n                                        controlId=\"universityGroup\"\n                                        className={classes.form_option}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"course\"\n                                            onChange={this.onChange}>\n                                            {this.state.availableCourses.map((item, _) => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    {/** Form for uploading a cv*/}\n                                    <Form.Group className={classes.file_selector}>\n                                        <Form.File id=\"cvFile\" />\n                                    </Form.Group>\n\n                                    {/** Right Form for selecting the corresponding course*/}\n                                    <Form.Group className={classes.file_selector}>\n                                        <Form.File id=\"transcriptFile\" />\n                                    </Form.Group>\n                                    <div className={classes.date_picker}>\n                                        <DatePicker\n                                            selected={this.state.date}\n                                            name=\"date\"\n                                            showTimeSelect\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                            onChange={this.onChangeDate}></DatePicker>\n                                    </div>\n                                    <div className={classes.numeric_input}>\n                                        <NumericInput\n                                            className={'form-control'}\n                                            min={1}\n                                            max={100}\n                                        />\n                                    </div>\n                                    <div className={classes.numeric_input}>\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            placeholder=\"(max. 200 words)\"\n                                            rows={5}\n                                            className={classes.description_area}\n                                        />\n                                    </div>\n                                    <Row className={classes.padding_top}>\n                                        <div className=\"col-sm-4\">\n                                            <div className={classes.checkmarks_left}>\n                                                <Form.Check\n                                                    name=\"remote\"\n                                                    label=\"Remote\"\n                                                    onClick={this.onClickCheckmark}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-4\">\n                                            <div className={classes.checkmarks_left}>\n                                                <Form.Check\n                                                    name=\"onsite\"\n                                                    label=\"Onsite\"\n                                                    onClick={this.onClickCheckmark}\n                                                />\n                                            </div>\n                                        </div>\n                                    </Row>\n                                </div>\n                            </Row>\n                            <div className={classes.button_box}>\n                                {/* Register Button */}\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onClick}>\n                                    Register\n                                </Button>\n\n                                {/* Cancel Button */}\n                                <Button\n                                    variant=\"secondary\"\n                                    size=\"lg\"\n                                    active\n                                    className={classes.button}\n                                    onClick={this.onCancel}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </Form>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(CreateOffering);\n","export default __webpack_public_path__ + \"static/media/graduation.162e2131.png\";","import React, { Component } from 'react';\nimport graduationIcon from '../assets/graduation.png';\nimport { Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\nimport AuthService from '../services/AuthService';\n// @Todo: Use Icons instead of labels for Calendar/List/Profile\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = () => ({\n    bar: {\n        fontSize: 'xxx-large'\n    },\n    listButton: {\n        position: 'absolute',\n        right: '350px',\n        top: '31px',\n        zIndex: 1000,\n        fontSize: 'xx-large',\n        color: 'white'\n    },\n    calendarButton: {\n        position: 'absolute',\n        right: '190px',\n        top: '31px',\n        zIndex: 1000,\n        fontSize: 'xx-large',\n        color: 'white'\n    },\n    profileButton: {\n        position: 'absolute',\n        right: '50px',\n        top: '23px',\n        zIndex: 1000\n    },\n    logo: {\n        paddingRight: '10px',\n        height: '70px',\n        width: '70px'\n    },\n    profileButton__span: {\n        color: 'white',\n        fontSize: 'xx-large'\n    },\n    title: {\n        position: 'relative',\n        left: '4rem',\n        color: '#56b5ab'\n    }\n});\n\nclass NavigationBar extends Component {\n    constructor() {\n        super();\n    }\n\n    onLogout() {\n        AuthService.logout();\n        this.props.history.push('/');\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <a href=\"/\">\n                    <img src={graduationIcon} className={classes.logo}></img>\n                </a>\n                <Navbar.Brand className={classes.bar} href=\"/\">\n                    <Row>\n                        <div className=\"col-sm-4\">Tutor</div>\n                        <div className={`${classes.title} col-sm-0`}>Me</div>\n                    </Row>\n                </Navbar.Brand>\n                <Nav>\n                    <a href=\"/\" className={classes.listButton}>\n                        List\n                    </a>\n                </Nav>\n                <Nav>\n                    <a href=\"/\" className={classes.calendarButton}>\n                        Calendar\n                    </a>\n                </Nav>\n                <Nav className={classes.profileButton}>\n                    <NavDropdown\n                        title={<span className={classes.profileButton__span}>Profile</span>}\n                        id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"/\">Home</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Edit Profile</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Offer Course</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.4\">Manage Course</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"/create-course\">Create Course</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/create-faculty\">Create Faculty</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/create-university\">\n                            Create University\n                        </NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"/login-user\" onClick={AuthService.logout}>\n                            Sign Out\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\nexport default withStyles(styles)(NavigationBar);\n","import React, { Component, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport AuthService from '../services/AuthService';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = () => ({\n    card: {\n        left: '-1rem',\n        width: '30rem'\n    },\n    form: {\n        width: '60rem'\n    },\n    component: {\n        backgroundColor: '#f0f2f5',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        minHeight: '92vh',\n        color: 'black'\n    },\n    login_form: {\n        paddingTop: '2rem',\n        left: '12rem',\n        position: 'relative'\n    },\n    register_button: {\n        position: 'relative',\n        paddingTop: '2rem',\n        width: '20rem',\n        left: '8.5rem'\n    },\n    padding_button_top: { paddingTop: '1rem' },\n    form: {\n        paddingRight: '1rem',\n        paddingLeft: '1rem',\n        paddingTop: '1rem',\n        paddingBottom: '1rem'\n    }\n});\n\nclass LoginUser extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: '',\n            password: '',\n            loading: false,\n            message: ''\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: '',\n            loading: true\n        });\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.login(this.state.email, this.state.password).then(\n                result => {\n                    this.props.history.push('/');\n                },\n                error => {\n                    const resMessage =\n                        (error.response && error.response.data && error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.component}>\n                <div className={`container ${classes.login_form}`}>\n                    <h2>Login</h2>\n                    <div className={`${classes.form}`}>\n                        <Card className={`${classes.card}`}>\n                            <Form\n                                className={`${classes.form}`}\n                                onSubmit={this.handleLogin}\n                                ref={c => {\n                                    this.form = c;\n                                }}>\n                                <div className={`${classes.padding_button_top} form-group`}>\n                                    <Input\n                                        placeholder=\"Email\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <Input\n                                        placeholder=\"Password\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChangePassword}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button\n                                        className={`btn btn-primary btn-block `}\n                                        disabled={this.state.loading}>\n                                        {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )}\n                                        <span>Login</span>\n                                    </button>\n                                    <hr></hr>\n                                    <p className=\"text-muted\">\n                                        Don't have an account yet ?{' '}\n                                        <a href=\"/register-user\">Sign Up!</a>\n                                    </p>\n                                </div>\n                                {this.state.message && (\n                                    <div className=\"form-group\">\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            {this.state.message}\n                                        </div>\n                                    </div>\n                                )}\n                                <CheckButton\n                                    style={{ display: 'none' }}\n                                    ref={c => {\n                                        this.checkBtn = c;\n                                    }}\n                                />\n                            </Form>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(LoginUser);\n","import React from 'react';\nimport AuthService from '../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const isAdmin = AuthService.isAdmin();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isAdmin ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login-user', state: { from: props.location } }} />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\nimport './App.css';\n\nimport CreateCourse from './components/CreateCourse';\nimport RegisterUser from './components/RegisterUser';\nimport HomeScreen from './components/HomeScreen';\nimport CreateUniversity from './components/CreateUniversity';\nimport CreateFaculty from './components/CreateFaculty';\nimport CreateOffering from './components/CreateOffering';\nimport NavigationBar from './components/NavigationBar';\nimport LoginUser from './components/LoginUser';\nimport PrivateRoute from './components/PrivateRoute';\nimport AdminRoute from './components/AdminRoute';\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar></NavigationBar>\n                <Router>\n                    <div>\n                        <Route path=\"/login-user\" component={LoginUser} />\n                        <Route exact path=\"/register-user\" component={RegisterUser} />\n                        <Route exact path=\"/\" component={HomeScreen} />\n                        <AdminRoute exact path=\"/create-course\" component={CreateCourse} />\n                        <AdminRoute exact path=\"/create-university\" component={CreateUniversity} />\n                        <AdminRoute exact path=\"/create-faculty\" component={CreateFaculty} />\n                        <Route exact path=\"/create-offering\" component={CreateOffering} />\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}